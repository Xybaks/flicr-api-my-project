{"version":3,"sources":["components/Navigation/Navigation.tsx","api/api.ts","state/photosReducer.ts","state/favoriteReducer.ts","common/components/Tag/Tags.tsx","common/components/Photo/Photo.tsx","common/components/ProgressIndicator/ProgressIndicator.tsx","components/MyPaginator/MyPaginator.tsx","common/functions/isPhotoFavorite.ts","components/FindPage/FindPage.tsx","components/Error404/Error404.tsx","components/FavoritesPage/FavoritesPage.tsx","components/Header/Header.tsx","components/Footer/Footer.tsx","state/reduxStore.ts","App.tsx","reportWebVitals.ts","index.tsx","common/components/Photo/Photo.module.scss","components/Error404/Error404.module.scss","App.module.scss","common/components/Tag/Tags.module.scss","components/FindPage/FindPage.module.scss","components/FavoritesPage/FavofitesPage.module.scss","components/Navigation/Navigation.module.scss","components/Header/Header.module.scss","components/Footer/Footer.module.scss"],"names":["Navigation","className","styles","navBlock","to","fontSize","apiKey","instance","axios","create","baseURL","photoAPI","text","page","get","params","api_key","format","per_page","nojsoncallback","sort","then","r","data","SET_PHOTOS","SET_PHOTOS_IS_GETTING_PROGRESS","SET_SEARCH_NAME","ADD_TAG","DELETE_TAG","SET_PAGE","SET_NEW_NAME","SET_NEW_ERROR","initialState","searchName","pages","perpage","total","photo","isGettingPhotosSuccess","isGettingPhotosProgress","newName","someError","setPhotos","photos","type","setIsGettingPhotosProgress","setPage","setNewError","err","getPhotos","dispatch","a","stat","SET_PHOTO_TO_FAVORITE","DELETE_PHOTO_FROM_FAVORITE","ADD_TAG_TO_FAVORITE","DELETE_TAG_FROM_FAVORITE","storageInitialState","favorite","keys","Object","localStorage","i","length","value","JSON","parse","getItem","k","push","favoritePhotoId","favoritePhoto","console","log","getInfoFromLocalStorage","addPhotoToFavorite","setPhotoToFavorite","setItem","stringify","removeFavoritePhoto","id","removeItem","addTagToFavoriteTC","tag","addTagToFavorite","tags","deleteTagFromFavoriteTC","deleteTagFromFavorite","filter","t","Tags","props","photoId","useDispatch","deleteTagHandler","deleteTag","isFavorite","map","index","singleTag","IconButton","size","onClick","Delete","color","Photo","React","memo","farm","secret","server","useState","tagInput","setTagInput","error","setError","addTagHandler","trim","addTag","imgSrc","photoContainer","photoImage","src","alt","button","Button","variant","TextField","label","onChange","e","currentTarget","onKeyPress","key","helperText","useStyles","makeStyles","theme","createStyles","root","display","margin","spacing","ProgressIndicator","classes","CircularProgress","MyPaginator","pagesCount","currentPage","onPageChanged","Pagination","count","event","showFirstButton","showLastButton","isPhotoFavorite","favoritePhotosPage","some","fP","container1","width","flexGrow","item","padding","xs","itemFlexGrow","border","FindPage","state","useSelector","title","setTitle","useEffect","findPhotoHandler","name","findPageContainer","Grid","container","placeholder","fullWidth","ph","Error404","errorBlock","number","message","cat","FavoritesPage","favoritePageContainer","Header","AppBar","position","style","background","Toolbar","justifyContent","paddingLeft","Footer","Container","maxWidth","me","rootReducer","combineReducers","action","p","includes","tagIndex","indexOf","newtags","splice","favPhoto","store","createStore","applyMiddleware","thunk","App","app","appHeader","table","exact","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.d74f74be.chunk.js","sourcesContent":["import React from \"react\";\nimport {NavLink} from \"react-router-dom\";\nimport styles from \"./Navigation.module.scss\";\nimport {FAVORITES_PATH, FIND_IMAGE_PATH} from \"../../App\";\nimport CloudIcon from '@material-ui/icons/Cloud';\nimport CollectionsBookmarkIcon from '@material-ui/icons/CollectionsBookmark';\n\nexport const Navigation = () => {\n    return (\n        <div className={styles.navBlock}>\n            <NavLink to={'/find'}>\n                <CloudIcon fontSize={\"large\"}/>\n            </NavLink>\n            <NavLink to={'/favor'}>\n                < CollectionsBookmarkIcon fontSize={\"large\"}/>\n            </NavLink>\n        </div>\n    );\n}","import axios from \"axios\";\r\n\r\nconst apiKey = \"fe6a01fa9267d89be3df137d31d4607c\"\r\nconst instance = axios.create({\r\n    baseURL: `https://api.flickr.com/services/rest/`,\r\n})\r\n\r\nexport const photoAPI = {\r\n    getPhotos(text: string, page: number) {\r\n        return instance.get<GetPhotosResponseType>(\r\n            `?method=flickr.photos.search`\r\n            , {\r\n                params: {\r\n                    api_key: apiKey,\r\n                    format: \"json\",\r\n                    page,\r\n                    per_page: 20,\r\n                    text,\r\n                    nojsoncallback: true,\r\n                    sort: \"relevance\"\r\n                }\r\n            }\r\n        )\r\n            .then((r) => {\r\n                return r.data\r\n            })\r\n    },\r\n    //this request is not used yet\r\n    getOnePhoto(id: string = \"19549873603\") {\r\n        return instance.get<GetOnePhotoResponseType>(`?method=flickr.photos.getInfo&api_key=${apiKey}&photo_id=${id}&format=json&nojsoncallback=true`)\r\n            .then((r) => {\r\n                    return r.data\r\n                }\r\n            )\r\n    }\r\n}\r\n\r\n//types\r\nexport type GetPhotosResponseType = {\r\n    stat: string,\r\n    photos: {\r\n        page: number,\r\n        pages: number,\r\n        perpage: number,\r\n        total: string,\r\n        photo: Array<PhotoType>\r\n    }\r\n}\r\nexport type PhotoType = {\r\n    farm: number\r\n    id: string\r\n    isfamily: number\r\n    isfriend: number\r\n    ispublic: number\r\n    owner: string\r\n    secret: string\r\n    server: string\r\n    title: string\r\n}\r\nexport type GetOnePhotoResponseType = {\r\n    photo: {\r\n        comments: {\r\n            _content: string\r\n        }\r\n        dates: {\r\n            posted: string, taken: string, takengranularity: number, takenunknown: string, lastupdate: string\r\n        }\r\n        dateuploaded: string\r\n        description: { _content: string }\r\n        editability: { cancomment: number, canaddmeta: number }\r\n        farm: number\r\n        id: string\r\n        isfavorite: number\r\n        license: string\r\n        media: string\r\n        notes: { note: Array<string> }\r\n        originalformat: string\r\n        originalsecret: string\r\n        owner: {\r\n            iconfarm: number\r\n            iconserver: string\r\n            location: string\r\n            nsid: string\r\n            path_alias: null | string\r\n            realname: string\r\n            username: string\r\n        }\r\n        people: { haspeople: number }\r\n        publiceditability: { cancomment: number, canaddmeta: number }\r\n        rotation: number\r\n        safety_level: string\r\n        secret: string\r\n        server: string\r\n        tags: { tag: Array<string> }\r\n        title: { _content: string }\r\n        urls: { url: Array<string> }\r\n        usage: { candownload: number, canblog: number, canprint: number, canshare: number }\r\n        views: string\r\n        visibility: { ispublic: number, isfriend: number, isfamily: number }\r\n        stat: string\r\n    }\r\n}","import {photoAPI, PhotoType} from \"../api/api\";\r\nimport {ThunkType} from \"./reduxStore\";\r\n\r\n\r\n// for actions names\r\nconst SET_PHOTOS = \"FLICR-API-MY-Project/PHOTOS-REDUCER/SET-PHOTOS\";\r\nconst SET_PHOTOS_IS_GETTING_PROGRESS = \"FLICR-API-MY-Project/PHOTOS-REDUCER/SET-PHOTOS-IS-GETTING-PROGRESS\";\r\nconst SET_SEARCH_NAME = \"FLICR-API-MY-Project/PHOTOS-REDUCER/SET-SEARCH-NAME\";\r\nconst ADD_TAG = \"FLICR-API-MY-Project/PHOTOS-REDUCER/ADD-TAG\";\r\nconst DELETE_TAG = \"FLICR-API-MY-Project/PHOTOS-REDUCER/DELETE-TAG\";\r\nconst SET_PAGE = \"FLICR-API-MY-Project/PHOTOS-REDUCER/SET-PAGE\";\r\nconst SET_NEW_NAME = \"FLICR-API-MY-Project/PHOTOS-REDUCER/SET_NEW_NAME\"\r\nconst SET_NEW_ERROR = \"FLICR-API-MY-Project/PHOTOS-REDUCER/SET_NEW_ERROR\"\r\n\r\n\r\nexport type PhotoInStoreType = {\r\n    farm: number\r\n    id: string\r\n    isfamily: number\r\n    isfriend: number\r\n    ispublic: number\r\n    owner: string\r\n    secret: string\r\n    server: string\r\n    title: string\r\n    tags: Array<string>\r\n}\r\n\r\nexport type InitialStatePhotosReducerType = typeof initialState\r\n\r\nconst initialState = {\r\n    searchName: \"\",\r\n    page: 1,\r\n    pages: 0,\r\n    perpage: 0,\r\n    total: \"\",\r\n    photo: [] as Array<PhotoInStoreType>,\r\n    isGettingPhotosSuccess: true,\r\n    isGettingPhotosProgress: false,\r\n    newName: \"\",\r\n    someError: \"\"\r\n}\r\n\r\n\r\nexport const photosReducer =\r\n    (state = initialState, action: PhotosReducerActionsType): InitialStatePhotosReducerType => {\r\n        switch (action.type) {\r\n            case SET_PHOTOS:\r\n                return {\r\n                    ...state,\r\n                    page: action.page,\r\n                    pages: action.pages,\r\n                    photo: action.photos.map(p => ({...p, tags: []})),\r\n                    isGettingPhotosSuccess: action.photos.length !== 0\r\n                }\r\n\r\n            case SET_PHOTOS_IS_GETTING_PROGRESS:\r\n                return {...state, isGettingPhotosProgress: action.isGettingPhotosProgress}\r\n\r\n            case SET_SEARCH_NAME:\r\n                return {...state, searchName: action.searchName}\r\n\r\n            case ADD_TAG:\r\n                return {\r\n                    ...state,\r\n                    photo: state.photo.map(\r\n                        p => (\r\n                            (p.id === action.id && !p.tags.includes(action.tag)) // check for duplicate tag\r\n                                ?\r\n                                {\r\n                                    ...p,\r\n                                    tags: [...p.tags, action.tag]\r\n                                }\r\n                                : p)\r\n                    )\r\n                }\r\n\r\n            case DELETE_TAG:\r\n                return {\r\n                    ...state,\r\n                    photo: state.photo.map(\r\n                        p => {\r\n                            if (p.id === action.id) {\r\n                                let tagIndex = p.tags.indexOf(action.tag) // to find index of tag\r\n                                let newtags = [...p.tags] // copy for splice\r\n                                if (tagIndex > -1)    // no possibility to use 2 several same tags\r\n                                    newtags.splice(tagIndex, 1)\r\n                                return {\r\n                                    ...p\r\n                                    ,\r\n                                    tags: newtags\r\n                                }\r\n                            } else return p\r\n                        }\r\n                    )\r\n                }\r\n            case SET_PAGE:\r\n                return {\r\n                    ...state,\r\n                    page: action.page\r\n                }\r\n            case SET_NEW_NAME:\r\n                return {\r\n                    ...state,\r\n                    newName: action.name\r\n                }\r\n            case SET_NEW_ERROR:\r\n                return {\r\n                    ...state,\r\n                    someError: action.err\r\n                }\r\n\r\n            default:\r\n                return state\r\n        }\r\n    }\r\n//ActionCreators\r\n\r\nexport const setPhotos = (photos: Array<PhotoType>, page: number, pages: number) => (\r\n    {type: SET_PHOTOS, photos, page, pages} as const);\r\nexport const setIsGettingPhotosProgress = (isGettingPhotosProgress: boolean) =>\r\n    ({type: SET_PHOTOS_IS_GETTING_PROGRESS, isGettingPhotosProgress} as const);\r\nexport const setSearchName = (searchName: string) => ({type: SET_SEARCH_NAME, searchName} as const);\r\nexport const addTag = (id: string, tag: string) => ({type: ADD_TAG, id, tag} as const);\r\nexport const deleteTag = (id: string, tag: string) => ({type: DELETE_TAG, id, tag} as const);\r\nexport const setPage = (page: number) => ({type: SET_PAGE, page} as const);\r\nexport const setNewName = (name: string) => ({type: SET_NEW_NAME, name} as const);\r\nexport const setNewError = (err: string) => ({type: SET_NEW_ERROR, err} as const);\r\n\r\n\r\n//ThunksCreators\r\nexport const getPhotos = (text: string, page: number): ThunkType =>\r\n    async (dispatch) => {\r\n        dispatch(setIsGettingPhotosProgress(true));\r\n        dispatch(setPage(page));\r\n        try {\r\n            const data = await photoAPI.getPhotos(text, page);\r\n            if (data.stat === \"ok\") {\r\n                dispatch(setPhotos(data.photos.photo, data.photos.page, data.photos.pages))\r\n                dispatch(setNewError(\"\"))\r\n            }\r\n        } catch {\r\n            dispatch(setNewError(\"no connection\"))\r\n        }\r\n        dispatch(setIsGettingPhotosProgress(false));\r\n    }\r\n\r\n\r\n//ActionTypes\r\ntype setPhotosActionType = ReturnType<typeof setPhotos>\r\ntype setIsGettingPhotosProgressActionType = ReturnType<typeof setIsGettingPhotosProgress>\r\ntype setSearchNameActionType = ReturnType<typeof setSearchName>\r\ntype addTagActionType = ReturnType<typeof addTag>\r\ntype deleteTagActionType = ReturnType<typeof deleteTag>\r\ntype setPageActionType = ReturnType<typeof setPage>\r\ntype setNewNameActionType = ReturnType<typeof setNewName>\r\ntype setNewErrorActionType = ReturnType<typeof setNewError>\r\n\r\n\r\n// common ActionsType of this reducer\r\nexport type PhotosReducerActionsType =\r\n    setPhotosActionType | setIsGettingPhotosProgressActionType | setSearchNameActionType | addTagActionType\r\n    | deleteTagActionType | setPageActionType | setNewNameActionType | setNewErrorActionType\r\n","import {ActionsType, AppRootStateType, ThunkType} from \"./reduxStore\";\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\nimport {PhotoInStoreType} from \"./photosReducer\";\r\n\r\n// for actions names\r\nconst SET_PHOTO_TO_FAVORITE = \"FLICR-API/FAVORITE-REDUCER/SET_F_PHOTO\";\r\nconst DELETE_PHOTO_FROM_FAVORITE = \"FLICR-API/FAVORITE-REDUCER/DELETE-F-PHOTO\";\r\nconst ADD_TAG_TO_FAVORITE = \"FLICR-API/FAVORITE-REDUCER/ADD-TAG-TO-FAVORITE\";\r\nconst DELETE_TAG_FROM_FAVORITE = \"FLICR-API/FAVORITE-REDUCER/DELETE-TAG-F-FAVORITE\";\r\n\r\nexport type FavoritePhotoType = {\r\n    favoritePhotoId: string,\r\n    favoritePhoto: PhotoInStoreType\r\n}\r\n\r\nexport type InitialStateFavoriteReducerType = {\r\n    favorite: Array<FavoritePhotoType>\r\n}\r\n\r\n\r\n// function to set initial state from localeStorage\r\nconst getInfoFromLocalStorage = (): InitialStateFavoriteReducerType => {\r\n    let storageInitialState: InitialStateFavoriteReducerType = {favorite: []}\r\n    try {\r\n        let keys: Array<string> = Object.keys(localStorage)\r\n        let i = keys.length;\r\n        while (i--) {\r\n            let value = JSON.parse(localStorage.getItem(keys[i]) as string);\r\n            let k: string = keys[i]\r\n            storageInitialState.favorite.push({favoritePhotoId: k, favoritePhoto: value})\r\n        }\r\n    } catch {\r\n        console.log(\"The app can't get data from localeStorage\")\r\n    }\r\n    return storageInitialState;\r\n}\r\n\r\nconst initialState: InitialStateFavoriteReducerType = getInfoFromLocalStorage()\r\n\r\nexport const favoriteReducer =\r\n    (state = initialState, action: FavoriteReducerActionsType): InitialStateFavoriteReducerType => {\r\n        switch (action.type) {\r\n\r\n            case SET_PHOTO_TO_FAVORITE:\r\n                return {\r\n                    ...state,\r\n                    favorite: [\r\n                        ...state.favorite, {\r\n                            favoritePhotoId: action.favoritePhotoId,\r\n                            favoritePhoto: action.favoritePhoto\r\n                        }\r\n                    ]\r\n                }\r\n            case DELETE_PHOTO_FROM_FAVORITE:\r\n                return {\r\n                    ...state,\r\n                    favorite: state.favorite.filter(favPhoto => favPhoto.favoritePhotoId !== action.id)\r\n                }\r\n            case ADD_TAG_TO_FAVORITE:\r\n                return {\r\n                    ...state,\r\n                    favorite: state.favorite.map(favPhoto => (favPhoto.favoritePhotoId !== action.id)\r\n                        ? favPhoto //if photo is not favorite\r\n                        : {\r\n                            ...favPhoto, favoritePhoto:\r\n                                {\r\n                                    ...favPhoto.favoritePhoto, tags:\r\n                                        (favPhoto.favoritePhoto.tags.includes(action.tag)) // don't add 2 several tags\r\n                                            ? [...favPhoto.favoritePhoto.tags]\r\n                                            : [...favPhoto.favoritePhoto.tags, action.tag]\r\n                                }\r\n                        }\r\n                    )\r\n                }\r\n            case DELETE_TAG_FROM_FAVORITE:\r\n\r\n                return {\r\n                    ...state,\r\n                    favorite: state.favorite.map(favPhoto => (favPhoto.favoritePhotoId !== action.id)\r\n                        ? favPhoto\r\n                        : {\r\n                            ...favPhoto, favoritePhoto:\r\n                                {\r\n                                    ...favPhoto.favoritePhoto,\r\n                                    tags: [...favPhoto.favoritePhoto.tags.filter(t => t !== action.tag)]\r\n                                }\r\n                        }\r\n                    )\r\n                }\r\n            default:\r\n                return state\r\n        }\r\n    }\r\n\r\n//ActionCreators\r\nexport const setPhotoToFavorite = (favoritePhotoId: string, favoritePhoto: PhotoInStoreType) => (\r\n    {type: SET_PHOTO_TO_FAVORITE, favoritePhotoId, favoritePhoto} as const);\r\nexport const deletePhotoFromFavorite = (id: string) => (\r\n    {type: DELETE_PHOTO_FROM_FAVORITE, id} as const);\r\nexport const addTagToFavorite = (id: string, tag: string) => (\r\n    {type: ADD_TAG_TO_FAVORITE, id, tag} as const);\r\nexport const deleteTagFromFavorite = (id: string, tag: string) => (\r\n    {type: DELETE_TAG_FROM_FAVORITE, id, tag} as const);\r\n\r\n// ThunksCreators\r\nexport const addPhotoToFavorite = (favoritePhotoId: string, favoritePhoto: PhotoInStoreType): ThunkType =>\r\n    (dispatch: ThunkDispatch<AppRootStateType, unknown, ActionsType>) => {\r\n        dispatch(setPhotoToFavorite(favoritePhotoId, favoritePhoto));\r\n        try {\r\n            localStorage.setItem(favoritePhotoId, JSON.stringify(favoritePhoto))\r\n        } catch {\r\n            console.log(\"image can't be added to LocaleStorage\")\r\n        }\r\n    }\r\n\r\nexport const removeFavoritePhoto = (favoritePhotoId: string): ThunkType =>\r\n    (dispatch) => {\r\n        dispatch(deletePhotoFromFavorite(favoritePhotoId));\r\n        try {\r\n            localStorage.removeItem(favoritePhotoId)\r\n        } catch {\r\n            console.log(\"image can't be deleted from LocaleStorage\")\r\n        }\r\n    }\r\n\r\nexport const addTagToFavoriteTC = (id: string, tag: string): ThunkType =>\r\n    (dispatch ) => {\r\n        dispatch(addTagToFavorite(id, tag));\r\n        try {\r\n            let favoritePhoto: PhotoInStoreType = JSON.parse(localStorage.getItem(id) as string)\r\n            favoritePhoto = {...favoritePhoto, tags: [...favoritePhoto.tags, tag]}\r\n            localStorage.setItem(id, JSON.stringify(favoritePhoto))\r\n        } catch {\r\n            console.log(\"tag can't be added to LocaleStorageTS\")\r\n        }\r\n\r\n    }\r\n\r\nexport const deleteTagFromFavoriteTC = (id: string, tag: string): ThunkType =>\r\n    (dispatch) => {\r\n        dispatch(deleteTagFromFavorite(id, tag));\r\n        try {\r\n            let favoritePhoto: PhotoInStoreType = JSON.parse(localStorage.getItem(id) as string)\r\n            favoritePhoto = {...favoritePhoto, tags: [...favoritePhoto.tags.filter(t => t !== tag ? 1 : -1)]}\r\n            localStorage.setItem(id, JSON.stringify(favoritePhoto))\r\n        } catch {\r\n            console.log(\"tag can't be deleted from LocaleStorageTS\")\r\n        }\r\n    }\r\n\r\n//ActionTypes\r\ntype SetPhotoToFavoriteActionType = ReturnType<typeof setPhotoToFavorite>\r\ntype DeletePhotoFromFavoriteActionType = ReturnType<typeof deletePhotoFromFavorite>\r\ntype AddTagToFavoriteActionType = ReturnType<typeof addTagToFavorite>\r\ntype DeleteTagFromFavoriteActionType = ReturnType<typeof deleteTagFromFavorite>\r\n\r\n\r\n// common ActionsType of this reducer\r\nexport type FavoriteReducerActionsType =\r\n    SetPhotoToFavoriteActionType | DeletePhotoFromFavoriteActionType\r\n    | AddTagToFavoriteActionType | DeleteTagFromFavoriteActionType\r\n","import React from \"react\";\r\nimport {IconButton} from \"@material-ui/core\";\r\nimport {Delete} from \"@material-ui/icons\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {deleteTag} from \"../../../state/photosReducer\";\r\nimport {deleteTagFromFavoriteTC} from \"../../../state/favoriteReducer\";\r\nimport styles from \"./Tags.module.scss\"\r\n\r\ntype TagPropsType = {\r\n    photoId: string\r\n    tags: Array<string>,\r\n    isFavorite?: boolean\r\n}\r\n\r\n\r\nexport const Tags: React.FC<TagPropsType> = (props) => {\r\n    const {tags, photoId} = props\r\n    const dispatch = useDispatch()\r\n\r\n    const deleteTagHandler = (tag: string) => () => {\r\n        dispatch(deleteTag(photoId, tag))\r\n        if (props.isFavorite) {\r\n            dispatch(deleteTagFromFavoriteTC(photoId, tag))\r\n        }\r\n    }\r\n    return (\r\n        <div className={styles.tags}>\r\n            {tags.map((t, index) => (\r\n                <div className={styles.singleTag}\r\n                     key={t + index}>\r\n                    <span> {t}</span>\r\n                    <IconButton size=\"small\" onClick={deleteTagHandler(t)}><Delete color=\"primary\"/></IconButton>\r\n                </div>\r\n            ))}</div>\r\n    )\r\n\r\n}","import React, {ChangeEvent, FC, useState} from \"react\";\r\nimport {Button, TextField} from \"@material-ui/core\";\r\nimport {addTag, PhotoInStoreType} from \"../../../state/photosReducer\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {Tags} from \"../Tag/Tags\";\r\nimport {addPhotoToFavorite, addTagToFavoriteTC, removeFavoritePhoto} from \"../../../state/favoriteReducer\";\r\nimport styles from \"./Photo.module.scss\"\r\n\r\ntype PhotoPropsType = {\r\n    photo: PhotoInStoreType\r\n    isFavorite?: boolean\r\n}\r\nexport const Photo: FC<PhotoPropsType> = React.memo((props) => {\r\n    const {farm, tags, id, secret, server} = props.photo\r\n    const dispatch = useDispatch()\r\n    const [tagInput, setTagInput] = useState(\"\")\r\n    const [error, setError] = useState<string>(\"\")\r\n\r\n    const inputTagHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (e.currentTarget.value.length < 16) {\r\n            setTagInput(e.currentTarget.value)\r\n            setError(\"\")\r\n        } else {\r\n            setError(\"long tag\")\r\n        }\r\n    }\r\n\r\n    const onKeyPressHandler = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n        if (error !== \"\") setError(\"\")\r\n        if (e.key === \"Enter\") addTagHandler()\r\n    }\r\n\r\n    const addTagHandler = () => {\r\n        if (tagInput.trim() !== \"\") {\r\n            dispatch(addTag(id, tagInput))\r\n            if (props.isFavorite) {\r\n                dispatch(addTagToFavoriteTC(id, tagInput))\r\n            }\r\n            setTagInput(\"\")\r\n        } else {\r\n            setError(\"Please, add tag\")\r\n        }\r\n    }\r\n\r\n    const OnClickHandler = () => {\r\n        if (props.isFavorite) {\r\n            dispatch(removeFavoritePhoto(id))\r\n        } else {\r\n            dispatch(addPhotoToFavorite(id, props.photo))\r\n        }\r\n    }\r\n\r\n    const imgSrc = `https://farm${farm}.staticflickr.com/${server}/${id}_${secret}.jpg)`\r\n\r\n    return (\r\n        <div className={styles.photoContainer}>\r\n            <img className={styles.photoImage} src={imgSrc} alt=\"img is loading :)\"/>\r\n            <div className={styles.button}>\r\n                <Button\r\n                    onClick={OnClickHandler}\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                >\r\n                    {props.isFavorite ? \"Remove  It!\" : \"Bookmark  it!\"}</Button>\r\n            </div>\r\n            <Tags\r\n                tags={tags}\r\n                photoId={id}\r\n                isFavorite={props.isFavorite}\r\n            />\r\n            <TextField className={styles.button}\r\n                       type=\"text\"\r\n                       value={tagInput}\r\n                       label=\"some tags?\"\r\n                       onChange={inputTagHandler}\r\n                       onKeyPress={onKeyPressHandler}\r\n                       variant=\"outlined\"\r\n                       error={!!error}\r\n                       helperText={error}\r\n            />\r\n        </div>\r\n    )\r\n})","import {makeStyles, Theme, createStyles} from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            display: 'flex',\r\n            '& > * + *': {\r\n                margin: theme.spacing(2),\r\n            },\r\n        },\r\n    }),\r\n);\r\n\r\nconst ProgressIndicator = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CircularProgress color=\"secondary\" />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProgressIndicator","import React from \"react\";\r\nimport {Pagination} from \"@material-ui/lab\";\r\n\r\ntype MyPaginatorPropsType = {\r\n    pagesCount: number\r\n    currentPage: number\r\n    onPageChanged: (pageNumber: number) => void\r\n}\r\n\r\nexport const MyPaginator:React.FC<MyPaginatorPropsType> = (props) => {\r\n\r\n    const {pagesCount, currentPage, onPageChanged}=props\r\n\r\n    const onPageChangedHandler = (event: React.ChangeEvent<unknown>, value: number) => {\r\n        onPageChanged(value)\r\n    }\r\n\r\n    return <>\r\n\r\n        {pagesCount === 0 ?\r\n            <></>\r\n            : < Pagination count={pagesCount} page={currentPage}\r\n                           onChange={onPageChangedHandler}\r\n                           showFirstButton showLastButton/>\r\n        }\r\n    </>\r\n}","import {InitialStateFavoriteReducerType} from \"../../state/favoriteReducer\";\r\n\r\n\r\n\r\n export const isPhotoFavorite =  (id: string, favoritePhotosPage: InitialStateFavoriteReducerType)=> {\r\n    return favoritePhotosPage?.favorite.some(fP => fP.favoritePhotoId === id)\r\n}","import {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../state/reduxStore\";\r\nimport {Photo} from \"../../common/components/Photo/Photo\";\r\nimport React, {ChangeEvent, useEffect, useState} from \"react\";\r\nimport {getPhotos, setNewName} from \"../../state/photosReducer\";\r\nimport ProgressIndicator from \"../../common/components/ProgressIndicator/ProgressIndicator\";\r\nimport {MyPaginator} from \"../MyPaginator/MyPaginator\";\r\nimport {isPhotoFavorite} from \"../../common/functions/isPhotoFavorite\";\r\nimport styles from \"./FindPage.module.scss\"\r\nimport {Button, Grid, TextField} from \"@material-ui/core\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container1: {\r\n        display: \"flex\",\r\n        width: \"100%\",\r\n        flexGrow: 1,\r\n        margin: \"auto\"\r\n    },\r\n    item: {\r\n        padding: theme.spacing(2),\r\n        xs: \"12\"\r\n    },\r\n    itemFlexGrow: {\r\n        flexGrow: 1,\r\n        border: \"1px solid red\"\r\n    }\r\n}));\r\n\r\nexport default function FindPage() {\r\n    const state = useSelector<AppRootStateType, AppRootStateType>(state => state)\r\n    const {photos, favorite} = state\r\n    const dispatch = useDispatch()\r\n    const [title, setTitle] = useState<string>(photos.newName)\r\n    const [error, setError] = useState<string>(state.photos.someError)\r\n    const classes = useStyles();\r\n    useEffect(() => {\r\n        setError(photos.someError)\r\n    }, [photos.someError])\r\n\r\n    const inputNameHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(e.currentTarget.value)\r\n        setError(\"\")\r\n    }\r\n\r\n    const onKeyPressHandler = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n        if (error !== \"\") setError(\"\")\r\n        if (e.key === \"Enter\") findPhotoHandler()\r\n    }\r\n\r\n    const findPhotoHandler = () => {\r\n        if (title.trim() !== \"\") {\r\n            dispatch(getPhotos(title, photos.page))\r\n            dispatch(setNewName(title))\r\n        } else {\r\n            setError(\"Please, add name to find image\")\r\n        }\r\n    }\r\n\r\n    const onPageChanged = (page: number) => {\r\n        dispatch(getPhotos(title, page))\r\n    }\r\n\r\n    if (photos.isGettingPhotosProgress) {\r\n        return <ProgressIndicator/>\r\n    }\r\n\r\n    return <div className={styles.findPageContainer}>\r\n        <div className={classes.container1}>\r\n            <Grid container>\r\n                <Grid className={classes.item} item xs={8}>\r\n                    <TextField\r\n                        type=\"text\"\r\n                        value={title}\r\n                        onChange={inputNameHandler}\r\n                        onKeyPress={onKeyPressHandler}\r\n                        variant=\"outlined\"\r\n                        placeholder={\"Print your search\"}\r\n                        error={error !== \"\"} // convert sting error to boolean\r\n                        helperText={error}\r\n                        fullWidth={true}\r\n                        size={\"medium\"}\r\n                    />\r\n                </Grid>\r\n                <Grid className={classes.item} item xs={4}>\r\n                    {/*<div  className={styles.button}>*/}\r\n                    <Button\r\n                        onClick={findPhotoHandler}\r\n                        variant=\"outlined\"\r\n                        color=\"primary\"\r\n                        size=\"large\"\r\n                    >FIND</Button>\r\n                    {/*</div>*/}\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n        {!photos.isGettingPhotosSuccess && <div>No image here. Would you like to find anything else?</div>}\r\n        <MyPaginator\r\n            currentPage={photos.page}\r\n            /*4000 photos is max for not registered users*/\r\n            pagesCount={photos.pages > 200 ? 200 : photos.pages}\r\n            onPageChanged={onPageChanged}/>\r\n        <div className={styles.photos}>\r\n            {photos.photo.map(ph => <Photo\r\n                    key={ph.id}\r\n                    photo={ph}\r\n                    isFavorite={isPhotoFavorite(ph.id, favorite)}\r\n                />\r\n            )\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\n","import React from \"react\";\nimport styles from './Error404.module.scss'\n\nfunction Error404() {\n    return (\n        <div className={styles.errorBlock}>\n            <div className={styles.number}>404</div>\n            <div className={styles.message}>Page not found!</div>\n            <div className={styles.cat}>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\n        </div>\n    );\n}\n\nexport default Error404;\n\n","import {useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../state/reduxStore\";\r\nimport {InitialStateFavoriteReducerType} from \"../../state/favoriteReducer\";\r\nimport {Photo} from \"../../common/components/Photo/Photo\";\r\nimport {isPhotoFavorite} from \"../../common/functions/isPhotoFavorite\";\r\nimport styles from \"./FavofitesPage.module.scss\"\r\nimport React from \"react\";\r\n\r\nexport const FavoritesPage = () => {\r\n\r\n    const favoritePhotosPage = useSelector<AppRootStateType, InitialStateFavoriteReducerType>(state => state.favorite)\r\n\r\n    return (\r\n        <div className={styles.favoritePageContainer}>\r\n            <div className={styles.photos}>\r\n                {favoritePhotosPage.favorite.map(photo =>\r\n                    <Photo key={photo.favoritePhotoId}\r\n                           photo={photo.favoritePhoto}\r\n                           isFavorite={isPhotoFavorite(photo.favoritePhotoId, favoritePhotosPage)}\r\n                    />\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}","import AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport styles from './Header.module.scss'\r\nimport {AppBar, Toolbar} from \"@material-ui/core\";\r\n\r\n\r\n\r\nexport const Header = () => {\r\n    return <AppBar position=\"static\" style={{ background: '#30ADD2' }} >\r\n        <Toolbar style={{display: \"flex\", justifyContent: \"space-between\", width:\"100%\", paddingLeft:\"30px\"}}>\r\n            <div className={styles.title}><h1>IMAGE FINDER 2</h1></div>\r\n            <AccountCircleIcon fontSize=\"large\" />\r\n        </Toolbar>\r\n    </AppBar>\r\n\r\n    //\r\n    // <div className={styles.header}>\r\n    //     <div><h1>IMAGE FINDER</h1></div>\r\n    //     <AccountCircleIcon fontSize=\"large\"/>\r\n    //     </div>\r\n\r\n\r\n}","import {AppBar, Container} from \"@material-ui/core\";\r\nimport styles from \"./Footer.module.scss\";\r\n\r\nexport const Footer = () => {\r\n    return (<div style={{width: \"100%\"}}>\r\n            <AppBar position=\"static\" color=\"transparent\">\r\n                <Container maxWidth=\"xl\">\r\n                    <div className={styles.me}>  © 2021 Nikolai Berestevich</div>\r\n                </Container>\r\n            </AppBar>\r\n        </div>\r\n    )\r\n}","import thunk, {ThunkAction} from \"redux-thunk\";\r\nimport {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {photosReducer, PhotosReducerActionsType} from \"./photosReducer\";\r\nimport {favoriteReducer, FavoriteReducerActionsType} from \"./favoriteReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    photos: photosReducer,\r\n    favorite:favoriteReducer\r\n})\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nexport type ActionsType =PhotosReducerActionsType | FavoriteReducerActionsType\r\n\r\nexport type ThunkType = ThunkAction<void, AppRootStateType, unknown, ActionsType>\r\n\r\n","import style from './App.module.scss';\nimport {HashRouter, Route, Switch} from 'react-router-dom';\nimport {Navigation} from \"./components/Navigation/Navigation\";\nimport FindPage from './components/FindPage/FindPage';\nimport Error404 from './components/Error404/Error404';\nimport {FavoritesPage} from \"./components/FavoritesPage/FavoritesPage\";\nimport {Header} from \"./components/Header/Header\";\nimport {Footer} from \"./components/Footer/Footer\";\nimport {Provider} from \"react-redux\";\nimport {store} from \"./state/reduxStore\";\nimport React from \"react\";\n\n\n// PATH\nexport const FIND_IMAGE_PATH = '/find';\nexport const FAVORITES_PATH = '/favor';\n\n\nconst App = () => {\n\n    return (\n        <Provider store={store}>\n            <HashRouter>\n                <div className={style.app}>\n                    <Header/>\n                    <div className={style.appHeader}>\n                        <div className={style.table}>\n                            <Navigation/>\n                            <Switch>\n                                <Route exact path={\"/find\"} render={() => <FindPage/>}/>\n                                <Route exact path={'/favor'}\n                                       render={() => <FavoritesPage/>}\n                                    // component={FavoritesPage}\n                                />\n                                <Route render={() => <Error404/>}/>\n                            </Switch>\n                            {/*<Switch>*/}\n                            {/*    <Route exact path={\"/\"} render={() => <FindPage/>}/>*/}\n                            {/*    <Route path={FAVORITES_PATH} render={() => <FavoritesPage/>}/>*/}\n                            {/*    <Route path={FIND_IMAGE_PATH} render={() => <FindPage/>}/>*/}\n                            {/*    <Route render={() => <Error404/>}/>*/}\n                            {/*</Switch>*/}\n                        </div>\n                        <Footer/>\n                    </div>\n                </div>\n            </HashRouter>\n        </Provider>\n    );\n}\n\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {HashRouter} from \"react-router-dom\";\nimport {store} from \"./state/reduxStore\";\nimport {Provider} from 'react-redux';\n\nReactDOM.render(\n    <React.StrictMode>\n        {/*<HashRouter> is more stable in gh-pages*/}\n        {/*<HashRouter*/}\n        {/*    basename='/my'*/}\n        {/*>*/}\n        {/*    <Provider store={store}>*/}\n                <App/>\n        {/*    </Provider>*/}\n        {/*</HashRouter>*/}\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"photoContainer\":\"Photo_photoContainer__3S-0b\",\"photoImage\":\"Photo_photoImage__2nPa4\",\"searchZone\":\"Photo_searchZone__3LXgT\",\"button\":\"Photo_button__ULexw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorBlock\":\"Error404_errorBlock__1JP_z\",\"number\":\"Error404_number__2zcL7\",\"message\":\"Error404_message__3_s_r\",\"cat\":\"Error404_cat__2_JJr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__YqG96\",\"appHeader\":\"App_appHeader__1FPdJ\",\"table\":\"App_table__1GIjm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tags\":\"Tags_tags__6KoVa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"findPageContainer\":\"FindPage_findPageContainer__3PzPY\",\"input\":\"FindPage_input__hISiJ\",\"photos\":\"FindPage_photos__1b8wT\",\"button\":\"FindPage_button__2vJET\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"favoritePageContainer\":\"FavofitesPage_favoritePageContainer__3kYsf\",\"photos\":\"FavofitesPage_photos__1nR9J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navBlock\":\"Navigation_navBlock__3BpM4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Header_title__2JbDC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"me\":\"Footer_me__CKNuz\"};"],"sourceRoot":""}