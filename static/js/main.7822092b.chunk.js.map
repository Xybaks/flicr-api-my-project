{"version":3,"sources":["components/Navigation/Navigation.tsx","api/api.ts","state/photosReducer.ts","common/components/Tag/Tag.tsx","components/FindPage/Photo/Photo.tsx","common/components/ProgressIndicator.tsx","components/FindPage/FindPage.tsx","components/Error404/Error404.tsx","components/FavoritesPage/FavoritesPage.tsx","components/Header/Header.tsx","App.tsx","reportWebVitals.ts","state/favoriteReducer.ts","state/reduxStore.ts","index.tsx","components/Error404/Error404.module.scss","App.module.scss","components/Navigation/Navigation.module.scss"],"names":["Navigation","className","styles","navBlock","to","FIND_IMAGE_PATH","FAVORITES_PATH","apiKey","instance","axios","create","baseURL","photoAPI","text","get","then","r","console","log","data","SET_PHOTOS","SET_PHOTOS_IS_GETTING_PROGRESS","SET_SEARCH_NAME","ADD_TAG","DELETE_TAG","initialState","searchName","page","pages","perpage","total","photo","isGettingPhotosSuccess","isGettingPhotosProgress","gettingPhotosError","setIsGettingPhotosProgress","type","Tag","props","tags","photoId","dispatch","useDispatch","deleteTagHandler","tag","id","deleteTag","map","t","index","IconButton","size","onClick","Delete","color","Photo","farm","secret","isfamily","isfriend","ispublic","owner","server","title","useState","tagInput","setTagInput","error","setError","addTagHandler","trim","addTag","style","width","height","backgroundImage","TextField","value","label","onChange","e","currentTarget","onKeyPress","key","variant","helperText","useStyles","makeStyles","theme","createStyles","root","display","margin","spacing","ProgressIndicator","classes","CircularProgress","FindPage","photoPage","useSelector","state","photos","setTitle","findPhotoHandler","a","stat","placeholder","ph","Error404","errorBlock","number","message","cat","FavoritesPage","Header","App","app","appHeader","table","exact","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","SET_PHOTO_TO_FAVORITE","DELETE_PHOTO_FROM_FAVORITE","favorite","rootReducer","combineReducers","action","p","length","includes","tagIndex","indexOf","newtags","splice","favoritePhotoId","favoritePhoto","filter","favPhoto","store","createStore","applyMiddleware","thunk","window","ReactDOM","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.7822092b.chunk.js","sourcesContent":["import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport styles from \"./Navigation.module.scss\";\nimport {FAVORITES_PATH, FIND_IMAGE_PATH} from \"../../App\";\n\nexport const Navigation = () => {\n\n    return (\n        <div>\n            <div>\n            <NavLink className={styles.navBlock} to={FIND_IMAGE_PATH}>find image</NavLink>\n            </div>\n            <div>\n            <NavLink className={styles.navBlock} to={FAVORITES_PATH}>favorites</NavLink>\n            </div>\n        </div>\n    );\n}","import axios from \"axios\";\r\n\r\nconst apiKey = \"fe6a01fa9267d89be3df137d31d4607c\"\r\nconst instance = axios.create({\r\n    baseURL: `https://api.flickr.com/services/rest/`,\r\n})\r\n\r\nexport const photoAPI = {\r\n    getPhotos(text: string) {\r\n        return instance.get<GetPhotosResponseType>(\r\n            `?method=flickr.photos.search&format=json&nojsoncallback=true&api_key=${apiKey}&per_page=20&page=100&text=${text}`)\r\n            .then((r) => {\r\n                console.log(r.data)\r\n                return r.data\r\n            }\r\n            // добавить обработку ошибок\r\n            )\r\n    },\r\n    getOnePhoto(id: string=\"19549873603\") {\r\n        return instance.get<GetOnePhotoResponseType>(`?method=flickr.photos.getInfo&api_key=${apiKey}&photo_id=${id}&format=json&nojsoncallback=true`)\r\n            .then((r) => {\r\n                console.log(r.data)\r\n                return r.data\r\n            }\r\n        // добавить обработку ошибок\r\n            )\r\n    }\r\n}\r\n\r\n//types\r\nexport type GetPhotosResponseType = {\r\n    stat: string,\r\n    photos: {\r\n        page: number,\r\n        pages: number,\r\n        perpage: number,\r\n        total: string,\r\n        photo: Array<PhotoType>\r\n    }\r\n}\r\nexport type PhotoType = {\r\n    farm: number\r\n    id: string\r\n    isfamily: number\r\n    isfriend: number\r\n    ispublic: number\r\n    owner: string\r\n    secret: string\r\n    server: string\r\n    title: string\r\n}\r\nexport type GetOnePhotoResponseType={\r\nphoto: {\r\n    comments: {\r\n        _content: string }\r\n    dates: {\r\n        posted: string, taken: string, takengranularity: number, takenunknown: string, lastupdate: string }\r\n    dateuploaded: string\r\n    description: { _content: string }\r\n    editability: { cancomment: number, canaddmeta: number }\r\n    farm: number\r\n    id: string\r\n    isfavorite: number\r\n    license: string\r\n    media: string\r\n    notes: { note: Array<string> }\r\n    originalformat: string\r\n    originalsecret: string\r\n    owner: { iconfarm: number\r\n        iconserver: string\r\n        location: string\r\n        nsid: string\r\n        path_alias: null |string\r\n        realname: string\r\n        username: string }\r\n    people: { haspeople: number }\r\n    publiceditability: { cancomment: number, canaddmeta: number }\r\n    rotation: number\r\n    safety_level: string\r\n    secret: string\r\n    server: string\r\n    tags: { tag: Array<string> }\r\n    title: { _content: string }\r\n    urls: { url: Array<string> }\r\n    usage: { candownload: number, canblog: number, canprint: number, canshare: number }\r\n    views: string\r\n    visibility: { ispublic: number, isfriend: number, isfamily: number }\r\n    stat: string\r\n}\r\n}","import {photoAPI, PhotoType} from \"../api/api\";\r\nimport {ActionsType, AppRootStateType, ThunkType} from \"./reduxStore\";\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\n\r\n// for actions names\r\nconst SET_PHOTOS = \"FLICR-API-MY-Project/PHOTOS-REDUCER/SET-PHOTOS\";\r\nconst SET_PHOTOS_IS_GETTING_PROGRESS = \"FLICR-API-MY-Project/PHOTOS-REDUCER/SET-PHOTOS-IS-GETTING-PROGRESS\";\r\nconst SET_SEARCH_NAME = \"FLICR-API-MY-Project/PHOTOS-REDUCER/SET-SEARCH-NAME\";\r\nconst ADD_TAG = \"FLICR-API-MY-Project/PHOTOS-REDUCER/ADD-TAG\";\r\nconst DELETE_TAG = \"FLICR-API-MY-Project/PHOTOS-REDUCER/DELETE-TAG\";\r\n\r\n\r\nexport type PhotoInStoreType = {\r\n    farm: number\r\n    id: string\r\n    isfamily: number\r\n    isfriend: number\r\n    ispublic: number\r\n    owner: string\r\n    secret: string\r\n    server: string\r\n    title: string\r\n    tags: Array<string>\r\n}\r\n\r\nexport type InitialStatePhotosReducerType = {\r\n    searchName: string,\r\n    page: number,\r\n    pages: number,\r\n    perpage: number,\r\n    total: string,\r\n    photo: Array<PhotoInStoreType>,\r\n    isGettingPhotosSuccess: boolean,\r\n    isGettingPhotosProgress: boolean, // true, if loading of photos is in progress\r\n    gettingPhotosError: string\r\n}\r\n\r\nconst initialState: InitialStatePhotosReducerType = {\r\n    searchName: \"\",\r\n    page: 0,\r\n    pages: 0,\r\n    perpage: 0,\r\n    total: \"\",\r\n    photo: [],\r\n    isGettingPhotosSuccess: true,\r\n    isGettingPhotosProgress: false,\r\n    gettingPhotosError: \"\"\r\n}\r\n\r\n\r\nexport const photosReducer =\r\n    (state = initialState, action: PhotosReducerActionsType): InitialStatePhotosReducerType => {\r\n        switch (action.type) {\r\n            case SET_PHOTOS:\r\n                return {\r\n                    ...state,\r\n                    photo: action.photos.map(p => ({...p, tags: []})),\r\n                    isGettingPhotosSuccess: action.photos.length !== 0\r\n                }\r\n            case SET_PHOTOS_IS_GETTING_PROGRESS:\r\n                return {...state, isGettingPhotosProgress: action.isGettingPhotosProgress}\r\n            case SET_SEARCH_NAME:\r\n                return {...state, searchName: action.searchName}\r\n            case ADD_TAG:\r\n\r\n\r\n                return {\r\n                    ...state,\r\n                    photo: state.photo.map(\r\n                        p => (\r\n                            (p.id === action.id && !p.tags.includes(action.tag)) // check for  adding duplicate tag\r\n                                ?\r\n                                {\r\n                                    ...p,\r\n                                    tags:[...p.tags, action.tag]\r\n                                }\r\n                                : p)\r\n                    )\r\n                }\r\n            case DELETE_TAG:\r\n                return {\r\n                    ...state,\r\n                    photo: state.photo.map(\r\n                        p => {\r\n                            if (p.id === action.id) {\r\n                                let tagIndex=p.tags.indexOf(action.tag,0) // to find index of tag\r\n                                let newtags=[...p.tags] // copy for splice\r\n                                if (tagIndex>-1)    // no possibility to use 2 several same tags\r\n                                    newtags.splice(tagIndex, 1)\r\n                                return {\r\n                                    ...p\r\n                                    ,\r\n                                    tags:newtags\r\n                                }\r\n                            } else return p\r\n                        }\r\n                    )\r\n                }\r\n\r\n            default:\r\n                return state\r\n        }\r\n    }\r\n//ActionCreators\r\n\r\nexport const setPhotos = (photos: Array<PhotoType>) => ({type: SET_PHOTOS, photos} as const);\r\nexport const setIsGettingPhotosProgress = (isGettingPhotosProgress: boolean) =>\r\n    ({type: SET_PHOTOS_IS_GETTING_PROGRESS, isGettingPhotosProgress} as const);\r\nexport const setSearchName = (searchName: string) => ({type: SET_SEARCH_NAME, searchName} as const);\r\nexport const addTag = (id: string, tag: string) => ({type: ADD_TAG, id, tag} as const);\r\nexport const deleteTag = (id: string, tag: string) => ({type: DELETE_TAG, id, tag} as const);\r\n\r\n//ThunksCreators\r\nexport const getPhotos = (text: string): ThunkType =>\r\n    async (dispatch: ThunkDispatch<AppRootStateType, unknown, ActionsType>) => {\r\n        dispatch(setIsGettingPhotosProgress(true));\r\n        const data = await photoAPI.getPhotos(text);\r\n        if (data.stat === \"ok\") {\r\n            dispatch(setPhotos(data.photos.photo))\r\n        }\r\n        dispatch(setIsGettingPhotosProgress(false));\r\n    }\r\n//ActionTypes\r\ntype setPhotosActionType = ReturnType<typeof setPhotos>\r\ntype setIsGettingPhotosProgressActionType = ReturnType<typeof setIsGettingPhotosProgress>\r\ntype setSearchNameActionType = ReturnType<typeof setSearchName>\r\ntype addTagActionType = ReturnType<typeof addTag>\r\ntype deleteTagActionType = ReturnType<typeof deleteTag>\r\n\r\n\r\n// common ActionsType of this reducer\r\nexport type PhotosReducerActionsType =\r\n    setPhotosActionType | setIsGettingPhotosProgressActionType | setSearchNameActionType | addTagActionType\r\n    | deleteTagActionType\r\n","import React from \"react\";\r\nimport {IconButton} from \"@material-ui/core\";\r\nimport {Delete} from \"@material-ui/icons\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {deleteTag} from \"../../../state/photosReducer\";\r\n\r\ntype TagPropsType={\r\n    photoId:string\r\n    tags:Array<string>,\r\n}\r\n\r\n\r\nexport const Tag: React.FC<TagPropsType> =(props)=>{\r\n    const{tags,photoId} =props\r\n    const dispatch = useDispatch()\r\n\r\n    const deleteTagHandler=(tag:string)=>()=>{\r\n            dispatch(deleteTag(photoId, tag))\r\n    }\r\n    return(\r\n        <div>{tags.map((t,index)=>(\r\n            <div key={t+index}>\r\n                <span> {t}</span>\r\n                <IconButton size=\"small\" onClick={deleteTagHandler(t)}><Delete color=\"primary\"/></IconButton>\r\n            </div>\r\n        ))}</div>\r\n    )\r\n\r\n}","import React, {ChangeEvent, FC, useState} from \"react\";\r\nimport {IconButton, TextField} from \"@material-ui/core\";\r\nimport {addTag, PhotoInStoreType} from \"../../../state/photosReducer\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {Tag} from \"../../../common/components/Tag/Tag\";\r\nimport {setPhotoToFavorite} from \"../../../state/favoriteReducer\";\r\n\r\n\r\ntype PhotoPropsType = {\r\n    photo: PhotoInStoreType\r\n}\r\nexport const Photo: FC<PhotoPropsType> = (props) => {\r\n    const {farm,tags, id, isfamily, isfriend, ispublic, owner, secret, server, title} = props.photo\r\n\r\n    const dispatch = useDispatch()\r\n    const [tagInput, setTagInput] = useState(\"\")\r\n    const [error, setError] = useState<string | null>(\"\")\r\n\r\n\r\n    const inputTagHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTagInput(e.currentTarget.value)\r\n        setError(null)\r\n    }\r\n\r\n    const onKeyPressHandler = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n        if (error !== null) setError(null)\r\n        if (e.key === \"Enter\") addTagHandler()\r\n    }\r\n\r\n    const addTagHandler = () => {\r\n        if (tagInput.trim() !== \"\") {\r\n            dispatch(addTag(id,tagInput))\r\n            setTagInput(\"\")\r\n        } else {\r\n            setError(\"Please, add tag\")\r\n        }\r\n    }\r\n// УБРАТЬ  перед отправкой!!!\r\n//     try {dispatch(setPhotoToFavorite(\"19549873603\",props.photo))}\r\n//     catch {}\r\n            return (\r\n        <div>\r\n        <div style={{\r\n            width: \"330px\",\r\n            height: \"200px\",\r\n            backgroundImage: `url(https://farm${farm}.staticflickr.com/${server}/${id}_${secret}.jpg)`\r\n        }}>\r\n        </div>\r\n            <div>{title}</div>\r\n            <Tag\r\n                tags={tags}\r\n                photoId={id}\r\n            />\r\n            <IconButton onClick={ ()=>{\r\n                console.log(\"Add tag to memory\")\r\n            }\r\n            }>Bookmark it!</IconButton>\r\n                <TextField\r\n                    type=\"text\"\r\n                    value={tagInput}\r\n                    label=\"new tag\"\r\n                    onChange={inputTagHandler}\r\n                    onKeyPress={onKeyPressHandler}\r\n                    variant=\"standard\"\r\n                    // placeholder={\"Add tag here\"}\r\n                    error={!!error} // convert sting error to boolean\r\n                    helperText={error}\r\n                />\r\n\r\n\r\n        </div>\r\n    )\r\n}","import {makeStyles, Theme, createStyles} from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            display: 'flex',\r\n            '& > * + *': {\r\n                margin: theme.spacing(2),\r\n            },\r\n        },\r\n    }),\r\n);\r\n\r\nconst ProgressIndicator = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CircularProgress color=\"secondary\"/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProgressIndicator","import {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../state/reduxStore\";\r\nimport {Photo} from \"./Photo/Photo\";\r\nimport React, {ChangeEvent, useState} from \"react\";\r\nimport {IconButton, TextField} from \"@material-ui/core\";\r\nimport {getPhotos, InitialStatePhotosReducerType} from \"../../state/photosReducer\";\r\nimport ProgressIndicator from \"../../common/components/ProgressIndicator\";\r\n\r\n\r\nexport const FindPage = () => {\r\n    const photoPage = useSelector<AppRootStateType, InitialStatePhotosReducerType>(state => state.photos)\r\n    const dispatch = useDispatch()\r\n    const [title, setTitle] = useState(\"\")\r\n    const [error, setError] = useState<string | null>(\"\")\r\n\r\n\r\n    const inputNameHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(e.currentTarget.value)\r\n        setError(null)\r\n    }\r\n\r\n    const onKeyPressHandler = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n        if (error !== null) setError(null)\r\n        if (e.key === \"Enter\") findPhotoHandler()\r\n    }\r\n\r\n    const findPhotoHandler = () => {\r\n        if (title.trim() !== \"\") {\r\n            dispatch(getPhotos(title))\r\n        } else {\r\n            setError(\"Please, add name to find image\")\r\n        }\r\n    }\r\n\r\n    if(photoPage.isGettingPhotosProgress){\r\n        return <ProgressIndicator/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <TextField\r\n                type=\"text\"\r\n                value={title}\r\n                onChange={inputNameHandler}\r\n                onKeyPress={onKeyPressHandler}\r\n                variant=\"outlined\"\r\n                placeholder={\"Print your search\"}\r\n                error={!!error} // convert sting error to boolean\r\n                helperText={error}\r\n            />\r\n\r\n            <IconButton onClick={findPhotoHandler}>FIND</IconButton>\r\n            {/*error of empty result of search*/}\r\n            {!photoPage.isGettingPhotosSuccess && <div>not found</div>}\r\n\r\n            {photoPage.photo.map(ph =>\r\n                <Photo\r\n                    key={ph.id}\r\n                    photo={ph}/>\r\n            )}\r\n        </div>\r\n    )\r\n\r\n}","import React from \"react\";\nimport styles from './Error404.module.scss'\n\nfunction Error404() {\n    return (\n        <div className={styles.errorBlock}>\n            <div className={styles.number}>404</div>\n            <div className={styles.message}>Page not found!</div>\n            <div className={styles.cat}>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\n        </div>\n    );\n}\n\nexport default Error404;\n\n","\r\n\r\n\r\n\r\nexport const FavoritesPage =()=>{\r\n    return(\r\n        <div>FavoritesPage</div>\r\n    )\r\n\r\n}","\r\n\r\n\r\n\r\nexport const Header =()=>{\r\n    return(\r\n        <div>Header</div>\r\n    )\r\n\r\n}","\nimport style from './App.module.scss';\nimport {Route, Switch } from 'react-router-dom';\nimport {Navigation} from \"./components/Navigation/Navigation\";\nimport { FindPage } from './components/FindPage/FindPage';\nimport Error404 from './components/Error404/Error404';\nimport {FavoritesPage} from \"./components/FavoritesPage/FavoritesPage\";\nimport {Header} from \"./components/Header/Header\";\nimport {photoAPI} from \"./api/api\";\n\n// PATH\nexport const FIND_IMAGE_PATH = \"/find\";\nexport const FAVORITES_PATH = \"/favorites\";\n\n\n\n\nconst App=()=> {\n    // photoAPI.getOnePhoto()\n\n  return (\n      <div className={style.app}>\n        <div className={style.appHeader} >\n          <Header />\n           <div className={style.table}>\n               <Navigation/>\n               <Switch>\n                   <Route exact path={\"/\"} render={() =>\n                       <FindPage/>}\n                   />\n                   <Route path={FAVORITES_PATH} render={() => <FavoritesPage/>}/>\n                   <Route path={FIND_IMAGE_PATH} render={() => <FindPage/>}/>\n                   <Route render={() => <Error404/>}/>\n               </Switch>\n           </div>\n          {/*<Switch>*/}\n          {/*  <Route exact path={\"/\"} render={() =>*/}\n          {/*      <FindPage/>}*/}\n          {/*  />*/}\n          {/*  <Route path={FAVORITES_PATH} render={() => <FavoritesPage/>}/>*/}\n          {/*  <Route path={FIND_IMAGE_PATH} render={() => <FindPage/>}/>*/}\n          {/*  <Route render={() => <Error404/>}/>*/}\n          {/*</Switch>*/}\n        </div>\n      </div>\n  );\n}\n\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {photoAPI, PhotoType} from \"../api/api\";\r\nimport {ActionsType, AppRootStateType, ThunkType} from \"./reduxStore\";\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\nimport {PhotoInStoreType} from \"./photosReducer\";\r\n\r\n\r\n// for actions names\r\nconst SET_PHOTO_TO_FAVORITE = \"FLICR-API/FAVORITE-REDUCER/SET_F_PHOTO\";\r\nconst DELETE_PHOTO_FROM_FAVORITE = \"FLICR-API/FAVORITE-REDUCER/DELETE-F-PHOTO\";\r\n\r\n\r\nexport type FavoritePhotoType = {\r\n    favoritePhotoId: string,\r\n    favoritePhoto: PhotoInStoreType\r\n}\r\n\r\nexport type InitialStateFavoriteReducerType = {\r\n    favorite: Array<FavoritePhotoType>\r\n}\r\n\r\nconst initialState: InitialStateFavoriteReducerType = {\r\n    favorite: []\r\n}\r\n\r\n\r\nexport const favoriteReducer =\r\n    (state = initialState, action: FavoriteReducerActionsType): InitialStateFavoriteReducerType => {\r\n        switch (action.type) {\r\n\r\n            case SET_PHOTO_TO_FAVORITE:\r\n                return {\r\n                    ...state,\r\n                    favorite: [\r\n                        ...state.favorite, {\r\n                            favoritePhotoId: action.favoritePhotoId,\r\n                            favoritePhoto: action.favoritePhoto\r\n                        }\r\n                    ]\r\n                }\r\n            case DELETE_PHOTO_FROM_FAVORITE:\r\n                return {\r\n                    ...state,\r\n                    favorite: state.favorite.filter(favPhoto => favPhoto.favoritePhotoId !== action.id)\r\n                }\r\n            default:\r\n                return state\r\n        }\r\n    }\r\n//ActionCreators\r\n\r\nexport const setPhotoToFavorite = (favoritePhotoId: string, favoritePhoto: PhotoInStoreType) => (\r\n    {type: SET_PHOTO_TO_FAVORITE, favoritePhotoId, favoritePhoto} as const);\r\nexport const deletePhotoFromFavorite = (id: string) => (\r\n    {type: DELETE_PHOTO_FROM_FAVORITE, id} as const);\r\n\r\n// ThunksCreators\r\nexport const addPhotoToFavorite = (favoritePhotoId: string, favoritePhoto: PhotoInStoreType): ThunkType =>\r\n    async (dispatch: ThunkDispatch<AppRootStateType, unknown, ActionsType>) => {\r\n        dispatch(setPhotoToFavorite(favoritePhotoId, favoritePhoto));\r\n        // if LocaleStorage was disabled\r\ntry {\r\n    localStorage.setItem(favoritePhotoId, JSON.stringify(favoritePhoto))\r\n}catch {\r\n    console.log( \"image can't be added to LocaleStorage\")\r\n}\r\n    }\r\n\r\n//ActionTypes\r\n\r\ntype SetPhotoToFavoriteActionType = ReturnType<typeof setPhotoToFavorite>\r\ntype deletePhotoFromFavoriteActionType = ReturnType<typeof deletePhotoFromFavorite>\r\n\r\n\r\n// common ActionsType of this reducer\r\nexport type FavoriteReducerActionsType =\r\n    SetPhotoToFavoriteActionType | deletePhotoFromFavoriteActionType\r\n","import thunk, {ThunkAction} from \"redux-thunk\";\r\nimport {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {photosReducer, PhotosReducerActionsType} from \"./photosReducer\";\r\nimport {favoriteReducer, FavoriteReducerActionsType} from \"./favoriteReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    photos: photosReducer,\r\n    favorite:favoriteReducer\r\n    // login: loginReducer,\r\n    // register: registerReducer,\r\n    // recover: recoverReducer,\r\n    // profile: profileReducer\r\n})\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nexport type ActionsType =PhotosReducerActionsType | FavoriteReducerActionsType\r\n\r\nexport type ThunkType = ThunkAction<void, AppRootStateType, unknown, ActionsType>\r\n\r\n// @ts-ignore\r\nwindow.store = store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {HashRouter} from \"react-router-dom\";\nimport {store} from \"./state/reduxStore\";\nimport {Provider} from 'react-redux';\n\nReactDOM.render(\n    <React.StrictMode>\n        {/*<HashRouter> more stable in gh-pages*/}\n        <HashRouter>\n            <Provider store={store}>\n                <App/>\n            </Provider>\n        </HashRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorBlock\":\"Error404_errorBlock__1JP_z\",\"number\":\"Error404_number__2zcL7\",\"message\":\"Error404_message__3_s_r\",\"cat\":\"Error404_cat__2_JJr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__YqG96\",\"appHeader\":\"App_appHeader__1FPdJ\",\"table\":\"App_table__1GIjm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navBlock\":\"Navigation_navBlock__3BpM4\"};"],"sourceRoot":""}