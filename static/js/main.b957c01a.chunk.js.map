{"version":3,"sources":["components/Navigation/Navigation.tsx","api/api.ts","state/photosReducer.ts","state/favoriteReducer.ts","common/components/Tag/Tag.tsx","common/components/Photo/Photo.tsx","common/components/ProgressIndicator/ProgressIndicator.tsx","components/MyPaginator/MyPaginator.tsx","components/FindPage/FindPage.tsx","components/Error404/Error404.tsx","components/FavoritesPage/FavoritesPage.tsx","components/Header/Header.tsx","App.tsx","reportWebVitals.ts","state/reduxStore.ts","index.tsx","components/Error404/Error404.module.scss","App.module.scss","components/Navigation/Navigation.module.scss","common/components/Photo/Photo.module.scss"],"names":["Navigation","className","styles","navBlock","to","FIND_IMAGE_PATH","fontSize","FAVORITES_PATH","apiKey","instance","axios","create","baseURL","photoAPI","text","page","pages","get","then","r","console","log","data","SET_PHOTOS","SET_PHOTOS_IS_GETTING_PROGRESS","SET_SEARCH_NAME","ADD_TAG","DELETE_TAG","SET_PAGE","initialState","searchName","perpage","total","photo","isGettingPhotosSuccess","isGettingPhotosProgress","gettingPhotosError","setPhotos","photos","type","setIsGettingPhotosProgress","setPage","getPhotos","dispatch","a","stat","SET_PHOTO_TO_FAVORITE","DELETE_PHOTO_FROM_FAVORITE","ADD_TAG_TO_FAVORITE","DELETE_TAG_FROM_FAVORITE","storageInitialState","favorite","keys","Object","localStorage","i","length","value","JSON","parse","getItem","k","push","favoritePhotoId","favoritePhoto","getInfoFromLocalStorage","addPhotoToFavorite","setPhotoToFavorite","setItem","stringify","removeFavoritePhoto","id","removeItem","addTagToFavoriteTC","tag","addTagToFavorite","tags","deleteTagFromFavoriteTC","deleteTagFromFavorite","filter","t","Tag","props","photoId","useDispatch","deleteTagHandler","deleteTag","isFavorite","map","index","IconButton","size","onClick","Delete","color","Photo","farm","secret","server","title","useState","tagInput","setTagInput","error","setError","addTagHandler","trim","addTag","imgSrc","photoImage","src","alt","TextField","label","onChange","e","currentTarget","onKeyPress","key","variant","helperText","useStyles","makeStyles","theme","createStyles","root","display","margin","spacing","ProgressIndicator","classes","CircularProgress","MyPaginator","pagesCount","currentPage","onPageChanged","Pagination","count","event","showFirstButton","showLastButton","FindPage","photoPage","useSelector","state","favoritePhotosPage","setTitle","findPhotoHandler","isPhotoFavorite","some","fP","placeholder","ph","Error404","errorBlock","number","message","cat","FavoritesPage","Header","App","style","app","appHeader","table","exact","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","p","includes","tagIndex","indexOf","newtags","splice","favPhoto","store","createStore","applyMiddleware","thunk","window","ReactDOM","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.b957c01a.chunk.js","sourcesContent":["import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport styles from \"./Navigation.module.scss\";\nimport {FAVORITES_PATH, FIND_IMAGE_PATH} from \"../../App\";\nimport CloudIcon from '@material-ui/icons/Cloud';\nimport CollectionsBookmarkIcon from '@material-ui/icons/CollectionsBookmark';\n\nexport const Navigation = () => {\n\n    return (\n        <div>\n            <div>\n            <NavLink className={styles.navBlock} to={FIND_IMAGE_PATH}>\n                <CloudIcon fontSize={\"large\"}/>\n            </NavLink>\n            </div>\n            <div>\n            <NavLink className={styles.navBlock} to={FAVORITES_PATH}>\n               < CollectionsBookmarkIcon fontSize={\"large\"}/>\n                </NavLink>\n            </div>\n        </div>\n    );\n}","import axios from \"axios\";\r\n\r\nconst apiKey = \"fe6a01fa9267d89be3df137d31d4607c\"\r\nconst instance = axios.create({\r\n    baseURL: `https://api.flickr.com/services/rest/`,\r\n})\r\n\r\nexport const photoAPI = {\r\n    getPhotos(text: string,page:number,pages:number=100) {\r\n        return instance.get<GetPhotosResponseType>(\r\n            `?method=flickr.photos.search&format=json&nojsoncallback=true&sort=relevance&api_key=${apiKey}&page=${page}&pages=${pages}&per_page=20&&text=${text}`)\r\n            .then((r) => {\r\n                console.log(r.data)\r\n                return r.data\r\n            }\r\n            // добавить обработку ошибок\r\n            )\r\n    },\r\n    getOnePhoto(id: string=\"19549873603\") {\r\n        return instance.get<GetOnePhotoResponseType>(`?method=flickr.photos.getInfo&api_key=${apiKey}&photo_id=${id}&format=json&nojsoncallback=true`)\r\n            .then((r) => {\r\n                console.log(r.data)\r\n                return r.data\r\n            }\r\n        // добавить обработку ошибок\r\n            )\r\n    }\r\n}\r\n\r\n//types\r\nexport type GetPhotosResponseType = {\r\n    stat: string,\r\n    photos: {\r\n        page: number,\r\n        pages: number,\r\n        perpage: number,\r\n        total: string,\r\n        photo: Array<PhotoType>\r\n    }\r\n}\r\nexport type PhotoType = {\r\n    farm: number\r\n    id: string\r\n    isfamily: number\r\n    isfriend: number\r\n    ispublic: number\r\n    owner: string\r\n    secret: string\r\n    server: string\r\n    title: string\r\n}\r\nexport type GetOnePhotoResponseType={\r\nphoto: {\r\n    comments: {\r\n        _content: string }\r\n    dates: {\r\n        posted: string, taken: string, takengranularity: number, takenunknown: string, lastupdate: string }\r\n    dateuploaded: string\r\n    description: { _content: string }\r\n    editability: { cancomment: number, canaddmeta: number }\r\n    farm: number\r\n    id: string\r\n    isfavorite: number\r\n    license: string\r\n    media: string\r\n    notes: { note: Array<string> }\r\n    originalformat: string\r\n    originalsecret: string\r\n    owner: { iconfarm: number\r\n        iconserver: string\r\n        location: string\r\n        nsid: string\r\n        path_alias: null |string\r\n        realname: string\r\n        username: string }\r\n    people: { haspeople: number }\r\n    publiceditability: { cancomment: number, canaddmeta: number }\r\n    rotation: number\r\n    safety_level: string\r\n    secret: string\r\n    server: string\r\n    tags: { tag: Array<string> }\r\n    title: { _content: string }\r\n    urls: { url: Array<string> }\r\n    usage: { candownload: number, canblog: number, canprint: number, canshare: number }\r\n    views: string\r\n    visibility: { ispublic: number, isfriend: number, isfamily: number }\r\n    stat: string\r\n}\r\n}","import {photoAPI, PhotoType} from \"../api/api\";\r\nimport {ActionsType, AppRootStateType, ThunkType} from \"./reduxStore\";\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\n\r\n\r\n// for actions names\r\nconst SET_PHOTOS = \"FLICR-API-MY-Project/PHOTOS-REDUCER/SET-PHOTOS\";\r\nconst SET_PHOTOS_IS_GETTING_PROGRESS = \"FLICR-API-MY-Project/PHOTOS-REDUCER/SET-PHOTOS-IS-GETTING-PROGRESS\";\r\nconst SET_SEARCH_NAME = \"FLICR-API-MY-Project/PHOTOS-REDUCER/SET-SEARCH-NAME\";\r\nconst ADD_TAG = \"FLICR-API-MY-Project/PHOTOS-REDUCER/ADD-TAG\";\r\nconst DELETE_TAG = \"FLICR-API-MY-Project/PHOTOS-REDUCER/DELETE-TAG\";\r\nconst SET_PAGE = \"FLICR-API-MY-Project/PHOTOS-REDUCER/SET-PAGE\";\r\n\r\n\r\n\r\nexport type PhotoInStoreType = {\r\n    farm: number\r\n    id: string\r\n    isfamily: number\r\n    isfriend: number\r\n    ispublic: number\r\n    owner: string\r\n    secret: string\r\n    server: string\r\n    title: string\r\n    tags: Array<string>\r\n}\r\n\r\nexport type InitialStatePhotosReducerType = {\r\n    searchName: string,\r\n    page: number,\r\n    pages: number,\r\n    perpage: number,\r\n    total: string,\r\n    photo: Array<PhotoInStoreType>,\r\n    isGettingPhotosSuccess: boolean,\r\n    isGettingPhotosProgress: boolean, // true, if loading of photos is in progress\r\n    gettingPhotosError: string // is not used\r\n}\r\n\r\nconst initialState: InitialStatePhotosReducerType = {\r\n    searchName: \"\",\r\n    page: 1,\r\n    pages: 0,\r\n    perpage: 0,\r\n    total: \"\",\r\n    photo: [],\r\n    isGettingPhotosSuccess: true,\r\n    isGettingPhotosProgress: false,\r\n    gettingPhotosError: \"\"\r\n}\r\n\r\n\r\nexport const photosReducer =\r\n    (state = initialState, action: PhotosReducerActionsType): InitialStatePhotosReducerType => {\r\n        switch (action.type) {\r\n            case SET_PHOTOS:\r\n                return {\r\n                    ...state,\r\n                    page: action.page,\r\n                    pages: action.pages,\r\n                    photo: action.photos.map(p => ({...p, tags: []})),\r\n                    isGettingPhotosSuccess: action.photos.length !== 0\r\n                }\r\n\r\n            case SET_PHOTOS_IS_GETTING_PROGRESS:\r\n                return {...state, isGettingPhotosProgress: action.isGettingPhotosProgress}\r\n\r\n            case SET_SEARCH_NAME:\r\n                return {...state, searchName: action.searchName}\r\n\r\n            case ADD_TAG:\r\n                return {\r\n                    ...state,\r\n                    photo: state.photo.map(\r\n                        p => (\r\n                            (p.id === action.id && !p.tags.includes(action.tag)) // check for  adding duplicate tag\r\n                                ?\r\n                                {\r\n                                    ...p,\r\n                                    tags: [...p.tags, action.tag]\r\n                                }\r\n                                : p)\r\n                    )\r\n                }\r\n\r\n            case DELETE_TAG:\r\n                return {\r\n                    ...state,\r\n                    photo: state.photo.map(\r\n                        p => {\r\n                            if (p.id === action.id) {\r\n                                let tagIndex = p.tags.indexOf(action.tag, 0) // to find index of tag\r\n                                let newtags = [...p.tags] // copy for splice\r\n                                if (tagIndex > -1)    // no possibility to use 2 several same tags\r\n                                    newtags.splice(tagIndex, 1)\r\n                                return {\r\n                                    ...p\r\n                                    ,\r\n                                    tags: newtags\r\n                                }\r\n                            } else return p\r\n                        }\r\n                    )\r\n                }\r\n            case SET_PAGE:\r\n                return {\r\n                    ...state,\r\n                    page: action.page}\r\n\r\n            default:\r\n                return state\r\n        }\r\n    }\r\n//ActionCreators\r\n\r\nexport const setPhotos = (photos: Array<PhotoType>, page: number, pages: number) => (\r\n    {type: SET_PHOTOS, photos, page, pages} as const);\r\nexport const setIsGettingPhotosProgress = (isGettingPhotosProgress: boolean) =>\r\n    ({type: SET_PHOTOS_IS_GETTING_PROGRESS, isGettingPhotosProgress} as const);\r\nexport const setSearchName = (searchName: string) => ({type: SET_SEARCH_NAME, searchName} as const);\r\nexport const addTag = (id: string, tag: string) => ({type: ADD_TAG, id, tag} as const);\r\nexport const deleteTag = (id: string, tag: string) => ({type: DELETE_TAG, id, tag} as const);\r\nexport const setPage = (page: number) => ({type: SET_PAGE, page} as const);\r\n\r\n\r\n//ThunksCreators\r\nexport const getPhotos = (text: string, page: number): ThunkType =>\r\n    async (dispatch: ThunkDispatch<AppRootStateType, unknown, ActionsType>) => {\r\n        dispatch(setIsGettingPhotosProgress(true));\r\n        dispatch(setPage(page));\r\n         const data = await photoAPI.getPhotos(text, page);\r\n        if (data.stat === \"ok\") {\r\n            dispatch(setPhotos(data.photos.photo, data.photos.page, data.photos.pages))\r\n        }\r\n        dispatch(setIsGettingPhotosProgress(false));\r\n    }\r\n\r\n\r\n//ActionTypes\r\ntype setPhotosActionType = ReturnType<typeof setPhotos>\r\ntype setIsGettingPhotosProgressActionType = ReturnType<typeof setIsGettingPhotosProgress>\r\ntype setSearchNameActionType = ReturnType<typeof setSearchName>\r\ntype addTagActionType = ReturnType<typeof addTag>\r\ntype deleteTagActionType = ReturnType<typeof deleteTag>\r\ntype setPageActionType = ReturnType<typeof setPage>\r\n\r\n\r\n\r\n// common ActionsType of this reducer\r\nexport type PhotosReducerActionsType =\r\n    setPhotosActionType | setIsGettingPhotosProgressActionType | setSearchNameActionType | addTagActionType\r\n    | deleteTagActionType | setPageActionType\r\n","import {ActionsType, AppRootStateType, ThunkType} from \"./reduxStore\";\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\nimport {PhotoInStoreType} from \"./photosReducer\";\r\n\r\n// for actions names\r\nconst SET_PHOTO_TO_FAVORITE = \"FLICR-API/FAVORITE-REDUCER/SET_F_PHOTO\";\r\nconst DELETE_PHOTO_FROM_FAVORITE = \"FLICR-API/FAVORITE-REDUCER/DELETE-F-PHOTO\";\r\nconst ADD_TAG_TO_FAVORITE = \"FLICR-API/FAVORITE-REDUCER/ADD-TAG-TO-FAVORITE\";\r\nconst DELETE_TAG_FROM_FAVORITE = \"FLICR-API/FAVORITE-REDUCER/DELETE-TAG-F-FAVORITE\";\r\n\r\nexport type FavoritePhotoType = {\r\n    favoritePhotoId: string,\r\n    favoritePhoto: PhotoInStoreType\r\n}\r\n\r\nexport type InitialStateFavoriteReducerType = {\r\n    favorite: Array<FavoritePhotoType>\r\n}\r\n\r\n\r\n// function to set initial state from localeStorage\r\nconst getInfoFromLocalStorage = (): InitialStateFavoriteReducerType => {\r\n    let storageInitialState: InitialStateFavoriteReducerType = {favorite: []}\r\n    try {\r\n        let keys: Array<string> = Object.keys(localStorage)\r\n        let i = keys.length;\r\n        while (i--) {\r\n            let value = JSON.parse(localStorage.getItem(keys[i]) as string);\r\n            let k: string = keys[i]\r\n            storageInitialState.favorite.push({favoritePhotoId: k, favoritePhoto: value})\r\n        }\r\n    } catch {\r\n        console.log(\"The app can't get data from localeStorage\")\r\n    }\r\n    return storageInitialState;\r\n}\r\n\r\nconst initialState: InitialStateFavoriteReducerType = getInfoFromLocalStorage()\r\n\r\nexport const favoriteReducer =\r\n    (state = initialState, action: FavoriteReducerActionsType): InitialStateFavoriteReducerType => {\r\n        switch (action.type) {\r\n\r\n            case SET_PHOTO_TO_FAVORITE:\r\n                return {\r\n                    ...state,\r\n                    favorite: [\r\n                        ...state.favorite, {\r\n                            favoritePhotoId: action.favoritePhotoId,\r\n                            favoritePhoto: action.favoritePhoto\r\n                        }\r\n                    ]\r\n                }\r\n            case DELETE_PHOTO_FROM_FAVORITE:\r\n                return {\r\n                    ...state,\r\n                    favorite: state.favorite.filter(favPhoto => favPhoto.favoritePhotoId !== action.id)\r\n                }\r\n            case ADD_TAG_TO_FAVORITE:\r\n                return {\r\n                    ...state,\r\n                    favorite: state.favorite.map(favPhoto => (favPhoto.favoritePhotoId !== action.id)\r\n                        ? favPhoto //if photo is not favorite\r\n                        : {\r\n                            ...favPhoto, favoritePhoto:\r\n                                {\r\n                                    ...favPhoto.favoritePhoto, tags:\r\n                                        (favPhoto.favoritePhoto.tags.includes(action.tag)) // don't add 2 several tags\r\n                                            ? [...favPhoto.favoritePhoto.tags]\r\n                                            : [...favPhoto.favoritePhoto.tags, action.tag]\r\n                                }\r\n                        }\r\n                    )\r\n                }\r\n            case DELETE_TAG_FROM_FAVORITE:\r\n\r\n                return {\r\n                    ...state,\r\n                    favorite: state.favorite.map(favPhoto => (favPhoto.favoritePhotoId !== action.id)\r\n                        ? favPhoto\r\n                        : {\r\n                            ...favPhoto, favoritePhoto:\r\n                                {\r\n                                    ...favPhoto.favoritePhoto,\r\n                                    tags: [...favPhoto.favoritePhoto.tags.filter(t => t !== action.tag)]\r\n                                }\r\n                        }\r\n                    )\r\n                }\r\n            default:\r\n                return state\r\n        }\r\n    }\r\n\r\n//ActionCreators\r\nexport const setPhotoToFavorite = (favoritePhotoId: string, favoritePhoto: PhotoInStoreType) => (\r\n    {type: SET_PHOTO_TO_FAVORITE, favoritePhotoId, favoritePhoto} as const);\r\nexport const deletePhotoFromFavorite = (id: string) => (\r\n    {type: DELETE_PHOTO_FROM_FAVORITE, id} as const);\r\nexport const addTagToFavorite = (id: string, tag: string) => (\r\n    {type: ADD_TAG_TO_FAVORITE, id, tag} as const);\r\nexport const deleteTagFromFavorite = (id: string, tag: string) => (\r\n    {type: DELETE_TAG_FROM_FAVORITE, id, tag} as const);\r\n\r\n// ThunksCreators\r\nexport const addPhotoToFavorite = (favoritePhotoId: string, favoritePhoto: PhotoInStoreType): ThunkType =>\r\n    (dispatch: ThunkDispatch<AppRootStateType, unknown, ActionsType>) => {\r\n        dispatch(setPhotoToFavorite(favoritePhotoId, favoritePhoto));\r\n        try {\r\n            localStorage.setItem(favoritePhotoId, JSON.stringify(favoritePhoto))\r\n        } catch {\r\n            console.log(\"image can't be added to LocaleStorage\")\r\n        }\r\n    }\r\n\r\nexport const removeFavoritePhoto = (favoritePhotoId: string): ThunkType =>\r\n    (dispatch: ThunkDispatch<AppRootStateType, unknown, ActionsType>) => {\r\n        dispatch(deletePhotoFromFavorite(favoritePhotoId));\r\n        try {\r\n            localStorage.removeItem(favoritePhotoId)\r\n        } catch {\r\n            console.log(\"image can't be deleted from LocaleStorage\")\r\n        }\r\n    }\r\n\r\nexport const addTagToFavoriteTC = (id: string, tag: string): ThunkType =>\r\n    (dispatch: ThunkDispatch<AppRootStateType, unknown, ActionsType>) => {\r\n        dispatch(addTagToFavorite(id, tag));\r\n        try {\r\n            let favoritePhoto: PhotoInStoreType = JSON.parse(localStorage.getItem(id) as string)\r\n            favoritePhoto = {...favoritePhoto, tags: [...favoritePhoto.tags, tag]}\r\n            localStorage.setItem(id, JSON.stringify(favoritePhoto))\r\n        } catch {\r\n            console.log(\"tag can't be added to LocaleStorageTS\")\r\n        }\r\n\r\n    }\r\n\r\nexport const deleteTagFromFavoriteTC = (id: string, tag: string): ThunkType =>\r\n    (dispatch: ThunkDispatch<AppRootStateType, unknown, ActionsType>) => {\r\n        console.log(\"dddds\")\r\n        dispatch(deleteTagFromFavorite(id, tag));\r\n        try {\r\n            let favoritePhoto: PhotoInStoreType = JSON.parse(localStorage.getItem(id) as string)\r\n            favoritePhoto = {...favoritePhoto, tags: [...favoritePhoto.tags.filter(t => t !== tag ? 1 : -1)]}\r\n            localStorage.setItem(id, JSON.stringify(favoritePhoto))\r\n        } catch {\r\n            console.log(\"tag can't be deleted from LocaleStorageTS\")\r\n        }\r\n    }\r\n\r\n//ActionTypes\r\ntype SetPhotoToFavoriteActionType = ReturnType<typeof setPhotoToFavorite>\r\ntype DeletePhotoFromFavoriteActionType = ReturnType<typeof deletePhotoFromFavorite>\r\ntype AddTagToFavoriteActionType = ReturnType<typeof addTagToFavorite>\r\ntype DeleteTagFromFavoriteActionType = ReturnType<typeof deleteTagFromFavorite>\r\n\r\n\r\n// common ActionsType of this reducer\r\nexport type FavoriteReducerActionsType =\r\n    SetPhotoToFavoriteActionType | DeletePhotoFromFavoriteActionType\r\n    | AddTagToFavoriteActionType | DeleteTagFromFavoriteActionType\r\n","import React from \"react\";\r\nimport {IconButton} from \"@material-ui/core\";\r\nimport {Delete} from \"@material-ui/icons\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {deleteTag} from \"../../../state/photosReducer\";\r\nimport {deleteTagFromFavoriteTC} from \"../../../state/favoriteReducer\";\r\n\r\ntype TagPropsType={\r\n    photoId:string\r\n    tags:Array<string>,\r\n    isFavorite?: boolean\r\n}\r\n\r\n\r\nexport const Tag: React.FC<TagPropsType> =(props)=>{\r\n    const{tags,photoId} =props\r\n    const dispatch = useDispatch()\r\n\r\n    const deleteTagHandler=(tag:string)=>()=>{\r\n            dispatch(deleteTag(photoId, tag))\r\n        if (props.isFavorite){\r\n            deleteTagFromFavoriteTC(photoId, tag)\r\n        }\r\n    }\r\n    return(\r\n        <div>{tags.map((t,index)=>(\r\n            <div key={t+index}>\r\n                <span> {t}</span>\r\n                <IconButton size=\"small\" onClick={deleteTagHandler(t)}><Delete color=\"primary\"/></IconButton>\r\n            </div>\r\n        ))}</div>\r\n    )\r\n\r\n}","import React, {ChangeEvent, FC, useState} from \"react\";\r\nimport {IconButton, TextField} from \"@material-ui/core\";\r\nimport {addTag, PhotoInStoreType} from \"../../../state/photosReducer\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {Tag} from \"../Tag/Tag\";\r\nimport {addPhotoToFavorite, addTagToFavoriteTC, removeFavoritePhoto} from \"../../../state/favoriteReducer\";\r\nimport styles from \"./Photo.module.scss\"\r\n\r\ntype PhotoPropsType = {\r\n    photo: PhotoInStoreType\r\n    isFavorite?: boolean\r\n}\r\nexport const Photo: FC<PhotoPropsType> = (props) => {\r\n    const {farm, tags, id, secret, server, title} = props.photo\r\n    const dispatch = useDispatch()\r\n    const [tagInput, setTagInput] = useState(\"\")\r\n    const [error, setError] = useState<string | null>(\"\")\r\n\r\n    const inputTagHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTagInput(e.currentTarget.value)\r\n        setError(null)\r\n    }\r\n\r\n    const onKeyPressHandler = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n        if (error !== null) setError(null)\r\n        if (e.key === \"Enter\") addTagHandler()\r\n    }\r\n\r\n    const addTagHandler = () => {\r\n        if (tagInput.trim() !== \"\") {\r\n            dispatch(addTag(id, tagInput))\r\n            if(props.isFavorite){\r\n                dispatch(addTagToFavoriteTC(id,tagInput))\r\n            }\r\n            setTagInput(\"\")\r\n        } else {\r\n            setError(\"Please, add tag\")\r\n        }\r\n    }\r\n\r\n    const OnClickHandler = () => {\r\n        if (props.isFavorite===true) {\r\n            dispatch(removeFavoritePhoto(id))\r\n        } else if (props.isFavorite===false){\r\n            dispatch(addPhotoToFavorite(id, props.photo))\r\n        }\r\n    }\r\n const imgSrc=`https://farm${farm}.staticflickr.com/${server}/${id}_${secret}.jpg)`\r\n    return (\r\n        <div>\r\n            {/*<div className={styles.photoImage} style={{*/}\r\n            {/*    width: \"330px\",*/}\r\n            {/*    height: \"200px\",*/}\r\n            {/*    backgroundImage: `url(https://farm${farm}.staticflickr.com/${server}/${id}_${secret}.jpg)`*/}\r\n            {/*}}>*/}\r\n            {/*</div>*/}\r\n\r\n            <img className={styles.photoImage} src={imgSrc} alt=\"img is loading :)\" />\r\n            <div>{title}</div>\r\n            <Tag\r\n                tags={tags}\r\n                photoId={id}\r\n                isFavorite={props.isFavorite}\r\n            />\r\n            <IconButton onClick={OnClickHandler}\r\n            >{props.isFavorite ? \"Remove  It\" : \"Bookmark  it!\"}</IconButton>\r\n            <TextField\r\n                type=\"text\"\r\n                value={tagInput}\r\n                label=\"new tag\"\r\n                onChange={inputTagHandler}\r\n                onKeyPress={onKeyPressHandler}\r\n                variant=\"standard\"\r\n                error={!!error}\r\n                helperText={error}\r\n            />\r\n        </div>\r\n    )\r\n}","import {makeStyles, Theme, createStyles} from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            display: 'flex',\r\n            '& > * + *': {\r\n                margin: theme.spacing(2),\r\n            },\r\n        },\r\n    }),\r\n);\r\n\r\nconst ProgressIndicator = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CircularProgress color=\"secondary\"/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProgressIndicator","import React from \"react\";\r\nimport {Pagination} from \"@material-ui/lab\";\r\n\r\ntype MyPaginatorPropsType = {\r\n    pagesCount: number\r\n    currentPage: number\r\n    onPageChanged: (pageNumber: number) => void\r\n}\r\n\r\nexport const MyPaginator:React.FC<MyPaginatorPropsType> = (props) => {\r\n\r\n    const {pagesCount, currentPage, onPageChanged}=props\r\n\r\n    const onPageChangedHandler = (event: React.ChangeEvent<unknown>, value: number) => {\r\n        onPageChanged(value)\r\n        console.log(value)\r\n    }\r\n\r\n    return <>\r\n        {pagesCount === 0 ?\r\n            <></>\r\n            : < Pagination count={pagesCount} page={currentPage}\r\n                           onChange={onPageChangedHandler}\r\n                           showFirstButton showLastButton/>\r\n        }\r\n    </>\r\n}","import {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../state/reduxStore\";\r\nimport {Photo} from \"../../common/components/Photo/Photo\";\r\nimport React, {ChangeEvent, useState} from \"react\";\r\nimport {IconButton, TextField} from \"@material-ui/core\";\r\nimport {getPhotos, InitialStatePhotosReducerType} from \"../../state/photosReducer\";\r\nimport ProgressIndicator from \"../../common/components/ProgressIndicator/ProgressIndicator\";\r\nimport {MyPaginator} from \"../MyPaginator/MyPaginator\";\r\nimport { InitialStateFavoriteReducerType} from \"../../state/favoriteReducer\";\r\n\r\n\r\n\r\nexport const FindPage = () => {\r\n\r\n    const photoPage = useSelector<AppRootStateType, InitialStatePhotosReducerType>(state => state.photos)\r\n    const favoritePhotosPage=useSelector<AppRootStateType, InitialStateFavoriteReducerType>(state => state.favorite)\r\n    const dispatch = useDispatch()\r\n    const [title, setTitle] = useState<string>(\"\")\r\n    const [error, setError] = useState<string | null>(\"\")\r\n\r\n    const inputNameHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(e.currentTarget.value)\r\n        setError(null)\r\n    }\r\n    const onKeyPressHandler = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n        if (error !== null) setError(null)\r\n        if (e.key === \"Enter\") findPhotoHandler()\r\n    }\r\n\r\n    const findPhotoHandler = () => {\r\n        if (title.trim() !== \"\") {\r\n            dispatch(getPhotos(title, photoPage.page))\r\n        } else {\r\n            setError(\"Please, add name to find image\")\r\n        }\r\n    }\r\n\r\n    const onPageChanged = (page: number) => {\r\n        dispatch(getPhotos(title, page))\r\n    }\r\n\r\n    if (photoPage.isGettingPhotosProgress) {\r\n        return <ProgressIndicator/>\r\n    }\r\n     const isPhotoFavorite = (id: string) => {\r\n        try {\r\n            if (favoritePhotosPage)\r\n                return favoritePhotosPage.favorite.some(fP => fP.favoritePhotoId === id)\r\n        } catch {\r\n            return false\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <TextField\r\n                type=\"text\"\r\n                value={title}\r\n                onChange={inputNameHandler}\r\n                onKeyPress={onKeyPressHandler}\r\n                variant=\"outlined\"\r\n                placeholder={\"Print your search\"}\r\n                error={!!error} // convert sting error to boolean\r\n                helperText={error}\r\n            />\r\n\r\n            <IconButton onClick={findPhotoHandler}>FIND</IconButton>\r\n            {/*error of empty result of search*/}\r\n            {!photoPage.isGettingPhotosSuccess && <div>No image here. Would you like to find anything else?</div>}\r\n\r\n            <MyPaginator\r\n                currentPage={photoPage.page}\r\n                pagesCount={photoPage.pages}\r\n                onPageChanged={onPageChanged}/>\r\n\r\n            {photoPage.photo.map(ph => <Photo\r\n                    key={ph.id}\r\n                    photo={ph}\r\n                    isFavorite={isPhotoFavorite(ph.id)}\r\n                />\r\n            )}\r\n        </div>\r\n    )\r\n\r\n}","import React from \"react\";\nimport styles from './Error404.module.scss'\n\nfunction Error404() {\n    return (\n        <div className={styles.errorBlock}>\n            <div className={styles.number}>404</div>\n            <div className={styles.message}>Page not found!</div>\n            <div className={styles.cat}>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\n        </div>\n    );\n}\n\nexport default Error404;\n\n","import { useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../state/reduxStore\";\r\nimport { InitialStateFavoriteReducerType} from \"../../state/favoriteReducer\";\r\nimport {Photo} from \"../../common/components/Photo/Photo\";\r\n\r\n\r\nexport const FavoritesPage = () => {\r\n\r\n    const favoritePhotosPage = useSelector<AppRootStateType, InitialStateFavoriteReducerType>(state => state.favorite)\r\n    function isPhotoFavorite  (id: string) {\r\n        try {\r\n            if (favoritePhotosPage)\r\n                return favoritePhotosPage.favorite.some(fP => fP.favoritePhotoId === id)\r\n        } catch {\r\n            return false\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            {favoritePhotosPage.favorite.map(photo => <Photo key={photo.favoritePhotoId}\r\n                                                    photo={photo.favoritePhoto}\r\n                                                    isFavorite={isPhotoFavorite(photo.favoritePhotoId)}\r\n                />\r\n            )}\r\n        </div>\r\n    )\r\n\r\n}","\r\n\r\n\r\n\r\nexport const Header =()=>{\r\n    return(\r\n        <div>Header</div>\r\n    )\r\n\r\n}","\nimport style from './App.module.scss';\nimport {Route, Switch } from 'react-router-dom';\nimport {Navigation} from \"./components/Navigation/Navigation\";\nimport { FindPage } from './components/FindPage/FindPage';\nimport Error404 from './components/Error404/Error404';\nimport {FavoritesPage} from \"./components/FavoritesPage/FavoritesPage\";\nimport {Header} from \"./components/Header/Header\";\n\n\n// PATH\nexport const FIND_IMAGE_PATH = \"/find\";\nexport const FAVORITES_PATH = \"/favorites\";\n\n\n\n\nconst App=()=> {\n\n  return (\n      <div className={style.app}>\n        <div className={style.appHeader} >\n          <Header />\n           <div className={style.table}>\n               <Navigation/>\n               <Switch>\n                   <Route exact path={\"/\"} render={() =>\n                       <FindPage/>}\n                   />\n                   <Route  exact path={FAVORITES_PATH} render={() => <FavoritesPage/>}/>\n                   <Route exact path={FIND_IMAGE_PATH} render={() => <FindPage/>}/>\n                   <Route render={() => <Error404/>}/>\n               </Switch>\n           </div>\n          {/*<Switch>*/}\n          {/*  <Route exact path={\"/\"} render={() =>*/}\n          {/*      <FindPage/>}*/}\n          {/*  />*/}\n          {/*  <Route path={FAVORITES_PATH} render={() => <FavoritesPage/>}/>*/}\n          {/*  <Route path={FIND_IMAGE_PATH} render={() => <FindPage/>}/>*/}\n          {/*  <Route render={() => <Error404/>}/>*/}\n          {/*</Switch>*/}\n        </div>\n      </div>\n  );\n}\n\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import thunk, {ThunkAction} from \"redux-thunk\";\r\nimport {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {photosReducer, PhotosReducerActionsType} from \"./photosReducer\";\r\nimport {favoriteReducer, FavoriteReducerActionsType} from \"./favoriteReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    photos: photosReducer,\r\n    favorite:favoriteReducer\r\n})\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nexport type ActionsType =PhotosReducerActionsType | FavoriteReducerActionsType\r\n\r\nexport type ThunkType = ThunkAction<void, AppRootStateType, unknown, ActionsType>\r\n\r\n// @ts-ignore\r\nwindow.store = store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {HashRouter} from \"react-router-dom\";\nimport {store} from \"./state/reduxStore\";\nimport {Provider} from 'react-redux';\n\nReactDOM.render(\n    <React.StrictMode>\n        {/*<HashRouter> more stable in gh-pages*/}\n        <HashRouter>\n            <Provider store={store}>\n                <App/>\n            </Provider>\n        </HashRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorBlock\":\"Error404_errorBlock__1JP_z\",\"number\":\"Error404_number__2zcL7\",\"message\":\"Error404_message__3_s_r\",\"cat\":\"Error404_cat__2_JJr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__YqG96\",\"appHeader\":\"App_appHeader__1FPdJ\",\"table\":\"App_table__1GIjm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navBlock\":\"Navigation_navBlock__3BpM4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"photoImage\":\"Photo_photoImage__2nPa4\"};"],"sourceRoot":""}