{"version":3,"sources":["components/Navigation/Navigation.tsx","components/FindPage/Photo/Photo.tsx","api/api.ts","state/photosReducer.ts","components/FindPage/FindPage.tsx","components/Error404/Error404.tsx","components/FavoritesPage/FavoritesPage.tsx","components/Header/Header.tsx","App.tsx","reportWebVitals.ts","state/reduxStore.ts","index.tsx","components/Error404/Error404.module.scss","components/Navigation/Navigation.module.scss"],"names":["Navigation","className","styles","navBlock","to","FIND_IMAGE_PATH","FAVORITES_PATH","Photo","props","photo","farm","id","tags","secret","isfamily","isfriend","ispublic","owner","server","title","style","width","height","backgroundImage","IconButton","onClick","console","log","instance","axios","create","baseURL","photoAPI","text","get","then","r","data","SET_PHOTOS","SET_PHOTOS_IS_GETTING_PROGRESS","SET_SEARCH_NAME","ADD_TAG","initialState","searchName","page","pages","perpage","total","isGettingPhotosSuccess","isGettingPhotosProgress","gettingPhotosError","setIsGettingPhotosProgress","type","FindPage","photoPage","useSelector","state","photos","dispatch","useDispatch","useState","setTitle","error","setError","findPhotoHandler","trim","a","stat","TextField","value","onChange","e","currentTarget","onKeyPress","key","variant","placeholder","helperText","map","ph","Error404","errorBlock","number","message","cat","FavoritesPage","Header","App","exact","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","p","length","tag","store","createStore","applyMiddleware","thunk","window","ReactDOM","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.0f8513dd.chunk.js","sourcesContent":["import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport styles from \"./Navigation.module.scss\";\nimport {FAVORITES_PATH, FIND_IMAGE_PATH} from \"../../App\";\n\nexport const Navigation = () => {\n\n    return (\n        <div>\n            <NavLink className={styles.navBlock} to={FIND_IMAGE_PATH}>find image</NavLink>\n            <NavLink className={styles.navBlock} to={FAVORITES_PATH}>favorites</NavLink>\n\n        </div>\n    );\n}","import React, {FC} from \"react\";\r\nimport {IconButton} from \"@material-ui/core\";\r\nimport {PhotoInStoreType} from \"../../../state/photosReducer\";\r\n\r\n\r\ntype PhotoPropsType = {\r\n    photo: PhotoInStoreType\r\n}\r\nexport const Photo: FC<PhotoPropsType> = (props) => {\r\n    const {farm,tags, id, isfamily, isfriend, ispublic, owner, secret, server, title} = props.photo\r\n    return (\r\n        <div>\r\n        <div style={{\r\n            width: \"330px\",\r\n            height: \"200px\",\r\n            backgroundImage: `url(https://farm${farm}.staticflickr.com/${server}/${id}_${secret}.jpg)`\r\n        }}>\r\n        </div>\r\n            <IconButton onClick={ ()=>{\r\n                console.log(\"Add to memory\")\r\n            }\r\n                // findPhotoHandler\r\n            }>Bookmark it!</IconButton>\r\n           <div>\r\n               {title}\r\n           </div>\r\n        </div>\r\n    )\r\n}","import axios from \"axios\";\r\n\r\nconst apiKey = \"fe6a01fa9267d89be3df137d31d4607c\"\r\nconst instance = axios.create({\r\n    baseURL: `https://api.flickr.com/services/rest/?method=flickr.photos.search&format=json&nojsoncallback=true&api_key=${apiKey}&per_page=20&page=100`,\r\n})\r\n\r\nexport const photoAPI = {\r\n    getPhotos(text: string) {\r\n        return instance.get<GetPhotosResponseType>(`&text=${text}`)\r\n            .then((r)=>{\r\n                console.log(r.data)\r\n                return r.data\r\n            })\r\n    }\r\n}\r\n//types\r\nexport type GetPhotosResponseType = {\r\n    stat: string,\r\n    photos:{\r\n        page: number,\r\n        pages: number,\r\n        perpage: number,\r\n        total: string,\r\n        photo:Array<PhotoType>\r\n    }\r\n}\r\nexport type PhotoType={\r\n    farm: number\r\n    id: string\r\n    isfamily: number\r\n    isfriend: number\r\n    ispublic: number\r\n    owner: string\r\n    secret: string\r\n    server: string\r\n    title: string\r\n}\r\n//\r\n// export const authAPI = {\r\n//     me() {\r\n//         return instance.post<MeResponseType>(`/auth/me`, {})\r\n//     },\r\n//     login(email: string, password: string, rememberMe: boolean = false) {\r\n//         return instance.post<LoginResponseType>(`/auth/login`, {email, password, rememberMe})\r\n//     },\r\n//     logout() {\r\n//         return instance.delete<LogoutResponseType>(`/auth/me`, {})\r\n//     },\r\n//     register(email: string, password: string) {\r\n//         return instance.post<RegisterResponseType>('auth/register', {email: email, password: password});\r\n//     },\r\n//     recoverPassword(email: string) {\r\n//         return instance.post('auth/forgot', {email})\r\n//     }\r\n// }\r\n//\r\n// //types\r\n// export type MeResponseType = {\r\n//     token: string\r\n//     tokenDeathTime: number\r\n//     __v: number\r\n//     _id: string;\r\n//     email: string;\r\n//     name: string;\r\n//     publicCardPacksCount: number; // number of decks\r\n//     created: Date;\r\n//     updated: Date;\r\n//     isAdmin: boolean; // do not work\r\n//     verified: boolean; // confirmed mail (if the password was restored - true)\r\n//     rememberMe: boolean;\r\n//     avatar?: string; // reference to user avatar\r\n//     error?: string;\r\n// }\r\n//\r\n// type LoginResponseType = {\r\n//     _id: string\r\n//     email: string\r\n//     name: string\r\n//     avatar?: string\r\n//     publicCardPacksCount: number // number of decks\r\n//     created: Date\r\n//     updated: Date\r\n//     isAdmin: boolean\r\n//     verified: boolean // confirmed mail\r\n//     rememberMe: boolean\r\n//     error?: string\r\n// }\r\n//\r\n// type LogoutResponseType = {\r\n//     info: string\r\n//     error: string\r\n// }\r\n//\r\n// type RegisterResponseType = {\r\n//     error?: string\r\n// }","import {photoAPI, PhotoType} from \"../api/api\";\r\nimport {ActionsType, AppRootStateType, ThunkType} from \"./reduxStore\";\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\n\r\n// for actions names\r\nconst SET_PHOTOS = \"FLICR-API-MY-Project/PHOTOS-REDUCER/SET-PHOTOS\";\r\nconst SET_PHOTOS_IS_GETTING_PROGRESS = \"FLICR-API-MY-Project/PHOTOS-REDUCER/SET-PHOTOS-IS-GETTING-PROGRESS\";\r\nconst SET_SEARCH_NAME = \"FLICR-API-MY-Project/PHOTOS-REDUCER/SET-SEARCH-NAME\";\r\nconst ADD_TAG = \"FLICR-API-MY-Project/PHOTOS-REDUCER/ADD_TAG\";\r\n\r\nexport type PhotoInStoreType = {\r\n    farm: number\r\n    id: string\r\n    isfamily: number\r\n    isfriend: number\r\n    ispublic: number\r\n    owner: string\r\n    secret: string\r\n    server: string\r\n    title: string\r\n    tags: Array<string>\r\n}\r\n\r\nexport type InitialStatePhotosReducerType = {\r\n    searchName: string,\r\n    page: number,\r\n    pages: number,\r\n    perpage: number,\r\n    total: string,\r\n    photo: Array<PhotoInStoreType>,\r\n    isGettingPhotosSuccess: boolean,\r\n    isGettingPhotosProgress: boolean, // true, if loading of photos is in progress\r\n    gettingPhotosError: string\r\n\r\n}\r\n\r\nconst initialState: InitialStatePhotosReducerType = {\r\n    searchName: \"\",\r\n    page: 0,\r\n    pages: 0,\r\n    perpage: 0,\r\n    total: \"\",\r\n    photo: [],\r\n    isGettingPhotosSuccess: true,\r\n    isGettingPhotosProgress: false,\r\n    gettingPhotosError: \"\"\r\n}\r\n\r\n\r\nexport const photosReducer =\r\n    (state = initialState, action: PhotosReducerActionsType): InitialStatePhotosReducerType => {\r\n        switch (action.type) {\r\n            case SET_PHOTOS:\r\n                return {\r\n                    ...state,\r\n                    photo: action.photos.map(p => ({...p, tags: []})),\r\n                        isGettingPhotosSuccess: action.photos.length!== 0\r\n                }\r\n            case SET_PHOTOS_IS_GETTING_PROGRESS:\r\n                return {...state, isGettingPhotosProgress: action.isGettingPhotosProgress}\r\n            case SET_SEARCH_NAME:\r\n                return {...state, searchName: action.searchName}\r\n            case ADD_TAG:\r\n                return {\r\n                    ...state,\r\n                    photo: state.photo.map(p => ({...p, tags: [...p.tags, action.tag]}))\r\n                }\r\n\r\n            default:\r\n                return state\r\n        }\r\n    }\r\n//ActionCreators\r\n\r\nexport const setPhotos = (photos: Array<PhotoType>) => ({type: SET_PHOTOS, photos} as const);\r\nexport const setIsGettingPhotosProgress = (isGettingPhotosProgress: boolean) =>\r\n    ({type: SET_PHOTOS_IS_GETTING_PROGRESS, isGettingPhotosProgress} as const);\r\nexport const setSearchName = (searchName: string) => ({type: SET_SEARCH_NAME, searchName} as const);\r\nexport const addTag = (id: string, tag: string) => ({type: ADD_TAG, id, tag} as const);\r\n\r\n//ThunksCreators\r\nexport const getPhotos = (text: string): ThunkType =>\r\n    async (dispatch: ThunkDispatch<AppRootStateType, unknown, ActionsType>) => {\r\n        dispatch(setIsGettingPhotosProgress(true));\r\n        const data = await photoAPI.getPhotos(text);\r\n        if (data.stat === \"ok\") {\r\n            dispatch(setPhotos(data.photos.photo))\r\n        }\r\n        dispatch(setIsGettingPhotosProgress(false));\r\n    }\r\n//ActionTypes\r\ntype setPhotosActionType = ReturnType<typeof setPhotos>\r\ntype setIsGettingPhotosProgressActionType = ReturnType<typeof setIsGettingPhotosProgress>\r\ntype setSearchNameActionType = ReturnType<typeof setSearchName>\r\ntype addTagActionType = ReturnType<typeof addTag>\r\n\r\n//\r\n\r\n\r\n// common ActionType of this reducer\r\nexport type PhotosReducerActionsType =\r\n    setPhotosActionType | setIsGettingPhotosProgressActionType | setSearchNameActionType | addTagActionType\r\n","import {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../state/reduxStore\";\r\nimport {Photo} from \"./Photo/Photo\";\r\nimport React, {ChangeEvent, useState} from \"react\";\r\nimport {IconButton, TextField} from \"@material-ui/core\";\r\nimport {getPhotos, InitialStatePhotosReducerType} from \"../../state/photosReducer\";\r\n\r\n\r\nexport const FindPage = () => {\r\n    const photoPage = useSelector<AppRootStateType, InitialStatePhotosReducerType>(state => state.photos)\r\n    const dispatch = useDispatch()\r\n    const [title, setTitle] = useState(\"\")\r\n    const [error, setError] = useState<string | null>(\"Please, add name to find image\")\r\n\r\n\r\n    const inputNameHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(e.currentTarget.value)\r\n        setError(null)\r\n    }\r\n\r\n    const onKeyPressHandler = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n        if (error !== null) setError(null)\r\n        if (e.key === \"Enter\") findPhotoHandler()\r\n    }\r\n\r\n    const findPhotoHandler = () => {\r\n        if (title.trim() !== \"\") {\r\n            dispatch(getPhotos(title))\r\n        } else {\r\n            setError(\"Please, add name to find image\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <TextField\r\n                type=\"text\"\r\n                value={title}\r\n                onChange={inputNameHandler}\r\n                onKeyPress={onKeyPressHandler}\r\n                variant=\"outlined\"\r\n                placeholder={\"Print your search\"}\r\n                error={!!error} // convert sting error to boolean\r\n                helperText={error}\r\n            />\r\n\r\n            <IconButton onClick={findPhotoHandler}>FIND</IconButton>\r\n            {/*error of empty result of search*/}\r\n            {!photoPage.isGettingPhotosSuccess && <div>not found</div>}\r\n\r\n            {photoPage.photo.map(ph =>\r\n                <Photo\r\n                    key={ph.id}\r\n                    photo={ph}/>\r\n            )}\r\n        </div>\r\n    )\r\n\r\n}","import React from \"react\";\nimport styles from './Error404.module.scss'\n\nfunction Error404() {\n    return (\n        <div className={styles.errorBlock}>\n            <div className={styles.number}>404</div>\n            <div className={styles.message}>Page not found!</div>\n            <div className={styles.cat}>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\n        </div>\n    );\n}\n\nexport default Error404;\n\n","\r\n\r\n\r\n\r\nexport const FavoritesPage =()=>{\r\n    return(\r\n        <div>FavoritesPage</div>\r\n    )\r\n\r\n}","\r\n\r\n\r\n\r\nexport const Header =()=>{\r\n    return(\r\n        <div>Header</div>\r\n    )\r\n\r\n}","// import React from 'react';\nimport './App.css';\nimport {Route, Switch } from 'react-router-dom';\nimport {Navigation} from \"./components/Navigation/Navigation\";\nimport { FindPage } from './components/FindPage/FindPage';\nimport Error404 from './components/Error404/Error404';\nimport {FavoritesPage} from \"./components/FavoritesPage/FavoritesPage\";\nimport {Header} from \"./components/Header/Header\";\n\n// PATH\nexport const FIND_IMAGE_PATH = \"/find\";\nexport const FAVORITES_PATH = \"/favorites\";\n\n\n\n\nconst App=()=> {\n\n  return (\n      <div className=\"App\">\n        <Navigation/>\n        <div>\n          <Header/>\n          <Switch>\n            <Route exact path={\"/\"} render={() =>\n                <FindPage/>}\n            />\n            <Route path={FAVORITES_PATH} render={() => <FavoritesPage/>}/>\n            <Route path={FIND_IMAGE_PATH} render={() => <FindPage/>}/>\n            <Route render={() => <Error404/>}/>\n          </Switch>\n        </div>\n      </div>\n  );\n}\n\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import thunk, {ThunkAction} from \"redux-thunk\";\r\nimport {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {photosReducer, PhotosReducerActionsType} from \"./photosReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    photos: photosReducer,\r\n    // login: loginReducer,\r\n    // register: registerReducer,\r\n    // recover: recoverReducer,\r\n    // profile: profileReducer\r\n})\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nexport type ActionsType =PhotosReducerActionsType\r\n\r\nexport type ThunkType = ThunkAction<void, AppRootStateType, unknown, ActionsType>\r\n\r\n// @ts-ignore\r\nwindow.store = store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {HashRouter} from \"react-router-dom\";\nimport {store} from \"./state/reduxStore\";\nimport {Provider} from 'react-redux';\n\nReactDOM.render(\n    <React.StrictMode>\n        {/*<HashRouter> more stable in gh-pages*/}\n        <HashRouter>\n            <Provider store={store}>\n                <App/>\n            </Provider>\n        </HashRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorBlock\":\"Error404_errorBlock__1JP_z\",\"number\":\"Error404_number__2zcL7\",\"message\":\"Error404_message__3_s_r\",\"cat\":\"Error404_cat__2_JJr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navBlock\":\"Navigation_navBlock__3BpM4\"};"],"sourceRoot":""}